GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 1
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


   2  *this file is modified by Xinda Ke from Wisconsin university IV_acopf.gms
   3  *updated by xinda ke in 8/1/2016
   4  *_______________________________________________________________________________
   5  * Filename: iv_acopf.gms
   6  * Description: AC optimal power flow model, rectangular current-voltage formulation
   7  *
   8  * Usage: gams iv_acopf.gms --case=/path/case.gdx
   9  *
  10  * Options:
  11  * --timeperiod: Select time period to solve. Default=1
  12  * --obj: Objective function, piecewise linear or quadratic. Default="quad"
  13  * --obj: Objective function, the default is to minimize for voltage deviation Default="v_dev"
  14  * --linelimits: Type of line limit data to use. Default="given"
  15  * --genPmin: Data for Generator lower limit. Default="given"
  16  * --allon: Option to turn on all gens or lines during solve. Default=none
  17  * --savesol: Turn on save solution option(1). Default=0
  18  * --verbose: Supresses printout(0). Default=1
  19  *_______________________________________________________________________________
  20   
  21   
  22   
  23   
  24   
  25   
  26   
  27  *===== SECTION: USER PARAMETERS
  28  *$include user_params.gms
  29   
  30  * switched shunt user parameters
  31  * later these will be passed in from Python
  37   
  38  * other penalty parameters
  46   
  47  * load bus voltage goal point
  48  * TODO: replace this with a gdx file containing individual goal
  49  * values for the buses
  51   
  53   
  55   
  56  * disable solar ?
  58   
  60   
  61  * disable demand response?
  63  * disable controllable solar q limit
  65  * disable solar reactive power?
  67   
  68  * disable switched shunts?
  70   
  71  * start optimization algorithm at previous solution?
  73   
  74  * initial starting point
  76   
  77  * quadratic penalty on distance to previous solution
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 2
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


  79   
  80  * use constraints in addition to variable bounds
  82   
  83  * append to report file
  85   
  86  * use pv/pq smoothing approach
  88   
  89  * pv/pq smoothing parameter
  91   
  92  * report file
  94   
  95  * write excel reports
  97   
  98  * use soft constraints for power balance
 100   
 101  * penalty parameter for soft power balance constraints
 103   
 104  *===== SECTION: DEVELOPER PARAMETERS
 105  *$include developer_params.gms
 106   
 107  * System dependence
 110   
 111  *define the path and name of case to be used
 113  *$if not set case $set  case "Dukeare342.gdx"
 114   
 115  * Printout options
 117  * Define filepath, name and extension.
 119  * Define input case
 120   
 123   
 124  *$set obj "pwl"
 125   
 126  * Default: timeperiod = 1
 128  * Default: allon=0
 130  * Default: Quadratic objective function
 132  * Default: Ignore D-curve constraints
 133  *$if not set qlim $set qlim 0
 134  * Default: elastic demand bidding does not apply here
 136  * Default: Use provided line limits (as opposed to uwcalc)
 138  * Default: Use provided generator lower limit
 140  * Default: Save solution option turned off
 142   
 144   
 145  *===== SECTION: EXTRACT DATA
 146  *$batinclude "%filepath%excel2gdx4ACOPF.gms"  excelpath solar_rp demand_P demand_Q gen_status geni_psch
BATINCLUDE /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/extract_data_SunLamp_newformulation_cle.gms
 148  *Created by xinda ke in 7/20/2016
 149  * this code is to extract data from gdx
 150  *updated by xinda ke in 7/24/2016
 151   
 152  *==== SECTION: Data (pre) declaration
 154  sets
 155  * New sets
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 3
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 156      conj /real,imag/
 157      costcoefset "Placeholder set for quadratic function coefficients (0,1,2)" /0*2/
 158      costptset "Placeholder set for pwl function pieces"  /1*40/
 159   
 160  * Timeperiod
 161      t /1/,
 162  * Dataset sets
 163      bus, gen, circuit, nongen, solarbus,
 164      interface, interfacemap (interface,bus,bus),
 165      demandbid, demandbidmap,
 166      fuel_t, fuel_s, prime_mover,
 167      bus_t, bus_s,
 168      gen_t, gen_s,
 169      branch_t, branch_s,
 170   
 171      interface_t,
 172      line(bus,bus,circuit),
 173      transformer(bus,bus,circuit),
 174      monitored_lines(bus,bus,circuit)
 175  ;
 176  set demanStep  "demandresponse-steps"  /1 * 5/;
 177  set demanRang  "demandresponse-steps"  /1 * 4/;
 178  alias(bus,i,j);
 179  alias(circuit,c);
 180  alias(gen,gen1);
 181  alias(bus_s,bus_s_0,bus_s_1,bus_s_2);
 182  parameters
 183      version, baseMVA, total_cost,Nb,
 184  * Domain info not stated because of how we iterate through data
 185       businfo(*,*,*),
 186       geninfo(*,*,*),
 187       fuelinfo(*,*),
 188       branchinfo(*,*,*,*,*),
 189       interfaceinfo(*,*,*)
 190  ;
 191  *-- Specially handled data (option specific)
 193  sets
 194    demandbid_t(*) / /
 195    demandbid_s(*) / /
 196    demandbid(*) / /
 197    demandbidmap (*,*) / /
 198  ;
 199   
 200  parameters
 201    demandbidinfo(*,*,*,*) / /
 202  ;
 204  *==== SECTION: Data read-in from input file
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/7bus.gdx
--- LOAD  version = 1:version
--- LOAD  baseMVA = 3:baseMVA
--- LOAD  total_cost = 2:total_cost
--- LOAD  bus = 6:bus
--- LOAD  gen = 7:gen
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 4
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


--- LOAD  circuit = 8:circuit
--- LOAD  bus_s = 17:bus_s
--- LOAD  line = 9:line
--- LOAD  transformer = 10:transformer
--- LOAD  bus_t = 16:bus_t
--- LOAD  gen_t = 18:gen_t
--- LOAD  branch_t = 20:branch_t
--- LOAD  branch_s = 21:branch_s
 209  *$LOAD fuel_t, fuel_s, prime_mover
--- LOAD  businfo = 28:businfo
--- LOAD  geninfo = 29:geninfo
--- LOAD  branchinfo = 30:branchinfo
--- LOAD  fuelinfo = 33:fuelinfo
--- LOAD  interface = 14:interface
--- LOAD  interfacemap = 15:interfacemap
--- LOAD  interfaceinfo = 32:interfaceinfo
 212  *$load bus_s, gen_s,
 213  *susceptance of switched shunt
 215   
 216   
 217  set pq  "real and reactive"  /1 * 2/;
 218  *$call 'GDXXRW input=solarbus.xlsx output=solarbus.gdx set=solarbus rng=Sheet1!A1:CX1 Cdim=1';
 219   
 220   
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solarbus2.gdx
--- LOAD  solarbus = 1:solarbus
 224   
 225  * Option to use elastic demand bidding turned on
 228  *==== SECTION: Validity of options
 229  * linelimits, case insensitive
 230   
 231   
 232   
 233   
 234  * allon, case insensitive
 235  * this will allow u to turn on certain bus or circuit selectively
 238   
 239  *==== SECTION: Data Declaration (extracted/manipulated from datafile)
 240  *-- All OPF models
 241  parameters
 242    type(bus)         "bus type (probably irrelevant, but gives reference bus[es])"
 243    pf(bus)           "bus demand power factor"
 244    Pd(bus)           "bus real power demand"
 245    Pd_respon_p_up(bus)   "the upper cap of real power of demand response"
 246    Pd_respon_p_down(bus)   "the downer cap of real power of demand response"
 247    Pd_respon_q_up(bus)   "the upper cap of reactive power of demand response"
 248    Pd_respon_q_down(bus)   "the downer cap of reactive power of demand response"
 249    Pd_respon_location(bus) "the location of demandresponse bus, equals 1 if that bus has this solar"
 250    gentype(gen)      "generator if equals 1 or slack bus equals 0"
 251    Pg(gen)           "gen real power output"
 252    PgSch(gen)        "gen scheduled power output"
 253    Pmax(gen)         "gen maximum real power output"
 254    Pmin(gen)         "gen minimum real power output"
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 5
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 255    Va(bus)           "bus voltage angle"
 256    Vm(bus)           "bus voltage magnitude"
 257    MaxVm(bus)        "maximum bus voltage magnitude"
 258    MinVm(bus)        "minimum bus voltage magnitude"
 259    Gs(bus)           "bus shunt conductance"
 260    solar_r(bus)  "solar real power"
 261    dis_gen_par1(bus)      "distributed generator parameter 1"
 262    dis_gen_par2(bus)      "distributed generator parameter 1"
 263    dis_gen_par3(bus)      "distributed generator parameter 1"
 264    atBus(gen,bus)    "Location of generator"
 265    status(gen)       "generator status"
 266    status2(gen,bus)   "Online generator status marked for all bus"
 267    Vsch(bus)          "generator voltage schedule"
 268    r(i,j,c)          "line resistance"
 269    x(i,j,c)          "line reactance"
 270    B(i,j,c)          "line susceptance"
 271    ratio(i,j,c)      "transformer tap ratio",
 272    angle(i,j,c)      "transformer tap angle",
 273    rateA(i,j,c)      "line power limits (MW)",
 274    currentrate(i,j,c)  "line current limits",
 275    branchstatus(i,j,c) "line status",
 276    interfaceLimit(interface) "Limit on power across each interface"
 277    solarlocation(solarbus,bus)  "the location of solar bus"
 278    contro_solar_location(bus) "the location of controllable solar bus, equals 1 if that bus has this solar"
 279    csolar_Q_limit_up(bus) "the location of controllable solar bus, equals 1 if that bus has this solar"
 280    csolar_Q_limit_down(bus) "the location of controllable solar bus, equals 1 if that bus has this solar"
 281    contro_solar_pout(bus)   "the real power output of curtailable solar bus"
 282    Qd(bus)           "bus reactive power demand"
 283    Qg(gen)           "gen reactive power output"
 284    Qmax(gen)         "gen maximum reactive power output"
 285    Qmin(gen)         "gen minimum reactive power output"
 286    Bs(bus)           "bus shunt susceptance"
 287    yb(i,j,conj)      "Bus admittance matrix, Ybus"
 288    g(i,j,c)          "line conductance"
 289    bc(i,j,c)         "line charging susceptance"
 290    Bswitched(bus,bus_s)     "susceptance of switched shunts",
 291    numBswitched(bus,bus_s)  "number of each type of switched shunt elements at each bus"
 292  *  switchedShuntB_init(bus,bus_s) "initial value of switched shunt susceptance"
 293    switchedShuntB_init(bus) "initial value of switched shunt susceptance"
 294    numShuntStepsOn_init(bus,bus_s) "initial number of switched shunt steps on"
 295    demLoad(demanStep) "demandresponse load"
 296    demPrice(demanStep) "demandresponse price"
 297    demSlope(demanStep) "slope"
 298    demLocation(bus)      "location of demand response"
 299  ;
 300   
 301   
 302   
 303   
 304  *r(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'r','given');
 305  *x(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'x','given');
 306  *branchstatus(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'branchstatus','%timeperiod%');
 307   
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 6
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/geni_st.gdx
--- LOAD  status = 1:status
 311   
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demand_response.gdx
--- LOAD  Pd_respon_location = 5:Pd_respon_location
--- LOAD  Pd_respon_p_down = 2:Pd_respon_p_down
--- LOAD  Pd_respon_q_down = 4:Pd_respon_q_down
--- LOAD  Pd_respon_p_up = 1:Pd_respon_p_up
--- LOAD  Pd_respon_q_up = 3:Pd_respon_q_up
 315   
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demandresponseload.gdx
--- LOAD  demLoad = 1:demLoad
 319  display demLoad;
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demandresponseprice.gdx
--- LOAD  demPrice = 1:demPrice
 323  demLocation('18')=1;
 324   
 325  demLoad(demanStep)=demLoad(demanStep)/baseMVA;
 326  demSlope(demanStep)$(ord(demanStep) > 1 )=( (demPrice(demanStep)-demPrice(demanStep-1) ) /(demLoad(demanStep)-demLoad(demanStep-1)))$(demLoad(demanStep) ne demLoad(demanStep-1));
 327   
 328  display demLoad,demPrice,demLocation,demSlope;
 329  dis_gen_par1('13')=250*sqr(baseMVA);
 330  dis_gen_par1('57')=310*sqr(baseMVA);
 331  dis_gen_par2('13')=15.6*baseMVA;
 332  dis_gen_par2('57')=29.7*baseMVA;
 333  dis_gen_par3('13')=0.33;
 334  dis_gen_par3('57')=0.3;
 335   
 337  Pd_respon_p_down(bus)= Pd_respon_p_down(bus)/baseMVA;
 338  Pd_respon_q_down(bus)$Pd_respon_q_down(bus)= Pd_respon_q_down(bus)/Pd_respon_p_down(bus)/baseMVA;
 339  *Pd_respon_q_down(bus)= Pd_respon_q_down(bus)/baseMVA;
 340  Pd_respon_p_up(bus)= Pd_respon_p_up(bus)/baseMVA;
 341  *Pd_respon_q_up(bus)=Pd_respon_q_up(bus)/baseMVA;
 342  Pd_respon_q_up(bus)$Pd_respon_q_up(bus)= Pd_respon_q_up(bus)/Pd_respon_p_up(bus)/baseMVA;
 344   
 345   
 346   
 348  contro_solar_pout(bus)=0;
 349  contro_solar_location(bus)=0;
 351   
 353  csolar_Q_limit_up(bus)=0;
 354  csolar_Q_limit_down(bus)=0;
 355  contro_solar_location(bus)=0;
 357  *to per unit
 358  csolar_Q_limit_up(bus) =csolar_Q_limit_up(bus)/baseMVA;
 359  csolar_Q_limit_down(bus) =csolar_Q_limit_down(bus)/baseMVA;
 360   
 361  * trying to replace the input file in the gdx above using wisconsin gdx
 362  *solar section
 363  *$call 'GDXXRW input=solar_s.xlsx output=solar_s.gdx par=solar_s rng=Sheet1!B1:CX2 Cdim=1';
 364  *$call 'GDXXRW input=solarindex.xlsx output=solarlocation.gdx par=solarlocation rng=Sheet1!B1:CX3 Cdim=2 ';
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solarlocation.gdx
--- LOAD  solarlocation = 1:solarlocation
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 7
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 368  * Bus type
 369  type(bus) = businfo(bus,'type','given');
 370  atBus(gen,bus)$geninfo(gen,'atBus',bus) = 1;
 371  Pmax(gen) = geninfo(gen,'Pmax','given')/baseMVA;
 372  Pmin(gen) = geninfo(gen,'Pmin','given')/baseMVA;
 373  Qmax(gen) = geninfo(gen,'Qmax','given')/baseMVA;
 374  Qmin(gen) = geninfo(gen,'Qmin','given')/baseMVA;
 375   
 376   
 377  *gentype  generator if equals 1 or slack bus equals 0
 378  gentype(gen)=1$(sum(bus$(atBus(gen,bus)), type(bus) eq 2));
 379  Vsch(bus)$(sum(gen,atBus(gen,bus)) > 0)=sum(gen$(atBus(gen,bus)), geninfo(gen,'Vg','given'))/ sum(gen, atBus(gen,bus));
 380  * Line resistance (r) and reactance (x)
 381  r(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'r','given');
 382  x(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'x','given');
 383  r(j,i,c)$r(i,j,c) = r(i,j,c);
 384  x(j,i,c)$x(i,j,c) = x(i,j,c);
 385  * line charging conductance
 386  bc(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'bc','given');
 387  bc(j,i,c)$(bc(i,j,c)) = bc(i,j,c);
 388  * transformer tap ratios and angles
 389  ratio(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'ratio','given');
 390  ratio(j,i,c)$(ratio(i,j,c)) =  1/ratio(i,j,c);
 391  * TODO is this right?
 392  * should we have 1/ratio and -angle? or
 393  * ratio and angle?
 394  * original was ratio and -angle, which makes no sense
 395  *CHECK the angle is all zero in 118 system, should be checked in other system
 396  angle(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'angle','given') * pi/180;
 397  * TODO is this right?
 398  angle(j,i,c)$(angle(i,j,c)) = -angle(i,j,c);
 399  *TODO the time step for branchstatus
 400  *time step has checked with Sidhart
 401  branchstatus(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'branchstatus','1');
 402  * Bus shunt conductance and susceptance
 403  * in the 118 system fixed shunt elements all got replaced by switched shunt elements
 404  Gs(bus) = businfo(bus,'Gs','given')/baseMVA;
 405  Bs(bus) = businfo(bus,'Bs','given')/baseMVA;
 406   
 407  * add the input replacement above
 408   
 409  status2(gen,bus) = 1$(atBus(gen,bus) and status(gen) eq 1 );
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/UC_OPF_load_elwi_BV.gdx
--- LOAD  Pd = 1:Pd
 413   
 414  Pd(bus) =Pd(bus)/baseMVA;
 415   
 416   
 417  * Voltage angle
 418  Va(bus) = businfo(bus,'Va','1')*pi/180;
 419  *Va(bus) = 0;
 420  *Voltage magnitude information
 421  Vm(bus) = businfo(bus,'Vm','1');
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 8
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 422  *Vm(bus) = 1;
 423  maxVm(bus) = businfo(bus,'maxVm','given');
 424  minVm(bus) = businfo(bus,'minVm','given');
 425   
 426  * Initial branch status (active/not connected)
 427   
 428  * Define original cost model in dataset
 429  * If linelimits=inf, no monitored lines
 431   
 432  * Limit on power across each interface
 433  *interfaceLimit(interface) = interfaceinfo(interface,'%timeperiod%','rateA')/baseMVA;
 434   
 435  * Line current
 436  *currentrate(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'currentrateA','%linelimits%');
 437  *currentrate(j,i,c)$(line(i,j,c)) = branchinfo(i,j,c,'currentrateA','%linelimits%');
 438   
 439  * Take down all lines to buses marked as "isolated"
 440  branchstatus(i,j,c)$(type(i) eq 4 or type(j) eq 4) = 0;
 441   
 442  * Line susceptance
 443  B(i,j,c)$line(i,j,c) = -x(i,j,c)/(sqr(r(i,j,c))+sqr(x(i,j,c)));
 444  B(j,i,c)$(b(i,j,c)) = b(i,j,c);
 445   
 446   
 447   
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/geni_p.gdx
--- LOAD  PgSch = 1:PgSch
 451  PgSch(gen) =PgSch(gen)/baseMVA;
 452  *starting searching point of generator real power output, might need obtained from input data
 453  Pg(gen)=PgSch(gen);
 454  *generator scheduled volage output
 455   
 456   
 457  * Line limit (active power)
 458  *line limit is disabled to match Matpower
 459  *rateA(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'rateA','%linelimits%')/baseMVA;
 460  *rateA(j,i,c)$(line(i,j,c)) = branchinfo(i,j,c,'rateA','%linelimits%')/baseMVA;
 461   
 462   
 463   
GDXIN   /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/UC_OPF_load_elwi_Q.gdx
--- LOAD  Qd = 1:Qd
 467  Qd(bus) =Qd(bus)/baseMVA;
 468   
 469   
 470   
 471   
 472  *$GDXIN geni_q.gdx
 473  *$LOAD Qg
 474  *$GDXIN
 475  *Qg(gen) =Qg(gen)/baseMVA;
 476  *Qg is zero from gdx.
 477  Qg(gen)=geninfo(gen,'Qg','1')/baseMVA;
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                      11/02/17 11:02:39 Page 9
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 478   
 479  * Bus shunt conductance and susceptance
 480   
 481   
 482  * line conductance
 483  g(i,j,c)$line(i,j,c) =  r(i,j,c)/(sqr(r(i,j,c))+sqr(x(i,j,c)));
 484  g(j,i,c)$(g(i,j,c)) = g(i,j,c);
 485   
 486   
 487   
 488   
 489  * line charging conductance
 490  *bc(i,j,c)$line(i,j,c) = branchinfo(i,j,c,'bc','given');
 491   
 492   
 493  * number and susceptance of switched shunt element data
 494  * number of steps in each switched shunt
 495  numBswitched(bus,bus_s) =
 496    businfo(bus,'switchedelements',bus_s)
 497  *  $(
 498  *    businfo(bus,'SwSh_Stat','given') = 1 and
 499  *    businfo(bus,'MODSW','given') = 1 and
 500  *    businfo(bus,'SwSh_RMPCT','given') = 100)
 501      ;
 502  * step size in each switched shunt
 503  Bswitched(bus,bus_s)$numBswitched(bus,bus_s) =
 504    businfo(bus,'switchedBs',bus_s)/baseMVA;
 505  * switched shunt susceptance in a prior solution
 506  switchedShuntB_init(bus)$(sum(bus_s,numBswitched(bus,bus_s))) =
 507    businfo(bus,'SwSh_Stat','given')* businfo(bus,'BINIT','given')/baseMVA;
 508  *switchedShuntB_init('307723')=0;
 509  * not sure if there is any better way to set this
 510  * but we only need it for the first time step
 511  numShuntStepsOn_init(bus,bus_s)$numBswitched(bus,bus_s)
 512    = switchedshuntB_init(bus) * numBswitched(bus,bus_s)
 513    / sum(bus_s_1, numBswitched(bus,bus_s_1) * Bswitched(bus,bus_s_1));
 514   
 515  * ==== SECTION: Additional Model Options
 516  *-- Elastic demand bidding turned on/off
 518   
 519  *-- %allon% options
 521  *branchstatus(j,i,c)$(branchstatus(i,j,c)) =  branchstatus(i,j,c);
 522  * filepath is not coming in from batinclude from iv_acopf correctly
 523  * use setnames to get it
 524  * temp_solution.gdx not found. is that OK?
 526  * load prior sol switched shunt settings if this is not the first time step
 528   
 529  *===== SECTION: PARAMETERS FROM USER
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/params_from_user.gms
 531   
 532  * switched shunt penalty parameters
 533  parameter
 534    shuntSwitchingPenalty1 /0.001/
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 10
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 535    shuntSwitchingPenalty2 /1e6/
 536    shuntSwitchingTolerance /1e0/
 537    shuntSwitchingBudgetPenalty /1e6/
 538    shuntSwitchingBudget /5e0/;
 539   
 540  * other penalty parameters
 541  parameter
 542    load_bus_volt_pen_coeff_1 /1/
 543    load_bus_volt_pen_coeff_2 /0/
 544    demand_response_decrease_penalty /10/
 545    demand_response_increase_penalty /10/
 546    solar_curtail_penalty /50/
 547    generator_voltage_deviation_penalty /100000.0/
 548    previous_solution_penalty_2 /0/;
 549   
 550  * other parameters
 551  parameter
 552    previous_solution_as_start_point /0/
 553    load_bus_volt_dead_band /0.01/
 554    load_bus_voltage_goal /1.0/
 555    use_constrs /0/
 556    use_pv_pq_smoothing /0/
 557    pv_pq_smoothing_param /0.001/;
 558   
 559   
 560  *===== SECTION: MODEL PARAMETERS
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/model_params.gms
 562   
 563   
 564  * generator participation in system adjustment from real generation schedule
 565  parameter
 566    gen_participation_factor(gen);
 567   
 568  sets
 569      load(bus) "Load buses"
 570      isGen(bus) "Generator buses"
 571      activeGen(bus) "Active generator buses"
 572      isLine(i,j) "Active (i,j) line"
 573      isSolar(bus) "solar bus";
 574   
 575  * prior variable values
 576  * penalize the distance of the new solution to
 577  * these prior variables in order to promote
 578  * continuity
 579  parameter
 580      V_P_prior(gen)           "Real power generation of generator",
 581      V_Q_prior(gen)           "Reactive power generation of generator",
 582      P_S_prior(i)      "real power generation of solar bus"
 583      Q_S_prior(i)      "reactive power generation of solar bus"
 584      V_real_prior(i)          "Real part of bus voltage",
 585      V_imag_prior(i)          "Imaginary part of bus voltage",
 586      Solar_p_curtail_prior(i)    "the amount of real power cutailed from controllable",
 587      De_response_Dec_P_prior(i)         "the decrease in demand response",
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 11
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 588      De_response_Inc_P_prior(i)         "the increment in demand response"
 589      balance_real_bound
 590      balance_react_bound
 591  ;
 592   
 593  parameters
 594    saturaup(bus) "the saturation status of generator bus"
 595    saturalow(bus) "the saturation status of generator bus"
 596    genQtemp(gen)      "the reactive of generator ";
 597   
 598  scalar voltageran_low,voltageran_high,step_leng;
 599   
 600  * bus voltage target info
 601  set
 602      bus_penalize_volt_mag_target(bus) "yes if the voltage magnitude target penalty should be assessed for this bus"
 603  parameter
 604      volt_mag_target(bus) ideal voltage magnitude for each bus;
 605   
 606  * variable values, constraint violation, and objective. at start point
 607  parameter
 608  * control variables
 609      V_P_start(gen)
 610      V_Q_start(gen)
 611      P_S_start(i)
 612      Q_S_start(i)
 613      V_real_start(i)
 614      V_imag_start(i)
 615      Solar_p_curtail_start(i)
 616      De_response_Dec_P_start(i)
 617      De_response_Inc_P_start(i)
 618      V_shunt_start(bus,bus_s)
 619      V_P_system_deviation_start
 620      V_switchedshuntB_start(i)
 621  * current
 622      V_LineIr_start(i,j,c)
 623      V_LineIr_start(j,i,c)
 624      V_LineIq_start(i,j,c)
 625      V_LineIq_start(j,i,c)
 626  * losses
 627      V_Lossijc_start(i,j,c)
 628      V_Lossi_start(i)
 629  * penalties and objectives
 630      V_load_bus_volt_pen_dev_start
 631      V_load_bus_volt_pen_start
 632      V_shuntSwitching_start(i,bus_s)
 633      V_totalShuntSwitching_start
 634      V_shuntSwitchingPenalty_start(i,bus_s)
 635      V_shuntTotalSwitchingPenalty_start
 636      V_shuntSwitchingTotalPenalty_start
 637      V_previous_solution_penalty_start
 638      V_objcost_start
 639  * variable bound violations
 640      gen_p_lo_viol_start(gen)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 12
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 641      gen_p_up_viol_start(gen)
 642      gen_q_lo_viol_start(gen)
 643      gen_q_up_viol_start(gen)
 644      solar_p_fx_viol_start(i)
 645      solar_q_up_viol_start(i)
 646      solar_q_lo_viol_start(i)
 647      solar_p_curtail_up_viol_start(bus)
 648      De_response_Inc_P_up_viol_start(bus)
 649      De_response_dec_P_lo_viol_start(bus)
 650      v_shunt_up_viol_start(bus,bus_s)
 651  * constraint violations
 652      balance_p_viol_start(i)
 653      balance_q_viol_start(i)
 654      p_generator_add_viol_start(gen)
 655      c_I_limit_viol_start(i,j,c)
 656      c_V_limit_lo_viol_start(i)
 657      c_V_limit_up_viol_start(i)
 658      v_generator_hardupl_viol_start(i)
 659      v_generator_harddownl_viol_start(i)
 660      v_under_q_up_slack_viol_start(gen)
 661      v_over_q_lo_slack_viol_start(gen)
 662  * summaries
 663      p_load_start
 664      p_gen_start
 665      p_shunt_start
 666      p_solar_start
 667      p_dr_start
 668      p_imbalance_start
 669      min_p_shortfall
 670      sum_loss_start
 671  *    v_load_bus_volt_pen_start
 672  *    v_total_shunt_switching_start
 673  *    v_shunt_switching_total_penalty_start
 674  *    v_previous_solution_penalty_start
 675  *    v_objcost_start
 676      max_gen_p_lo_viol_start
 677      max_gen_p_up_viol_start
 678      max_gen_q_lo_viol_start
 679      max_gen_q_up_viol_start
 680      max_solar_p_fx_viol_start
 681      max_solar_q_up_viol_start
 682      max_solar_q_lo_viol_start
 683      max_solar_p_curtail_up_viol_start
 684      max_De_response_Inc_P_up_viol_start
 685      max_De_response_dec_P_lo_viol_start
 686      max_v_shunt_up_viol_start
 687      max_balance_p_viol_start
 688      max_balance_q_viol_start
 689      max_p_generator_add_viol_start
 690      max_c_I_limit_viol_start
 691      max_c_V_limit_lo_viol_start
 692      max_c_V_limit_up_viol_start
 693      max_v_generator_hardupl_viol_start
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 13
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 694      max_v_generator_harddownl_viol_start
 695      max_v_under_q_up_slack_viol_start
 696      max_v_over_q_lo_slack_viol_start;
 697   
 698  * variable values, constraint violation, and objective. at solution point
 699  parameter
 700  * control variables
 701      V_P_sol(gen)
 702      V_Q_sol(gen)
 703      P_S_sol(i)
 704      Q_S_sol(i)
 705      V_real_sol(i)
 706      V_imag_sol(i)
 707      Solar_p_curtail_sol(i)
 708      De_response_Dec_P_sol(i)
 709      De_response_Inc_P_sol(i)
 710      V_shunt_sol(bus,bus_s)
 711      V_P_system_deviation_sol
 712      V_switchedshuntB_sol(i)
 713  * current
 714      V_LineIr_sol(i,j,c)
 715      V_LineIr_sol(j,i,c)
 716      V_LineIq_sol(i,j,c)
 717      V_LineIq_sol(j,i,c)
 718  * losses
 719      V_Lossijc_sol(i,j,c)
 720      V_Lossi_sol(i)
 721  * penalties and objectives
 722      V_shuntSwitching_sol(i,bus_s)
 723      V_totalShuntSwitching_sol
 724      V_shuntSwitchingPenalty_sol(i,bus_s)
 725      V_shuntTotalSwitchingPenalty_sol
 726      V_shuntSwitchingTotalPenalty_sol
 727      V_previous_solution_penalty_sol
 728      V_objcost_sol
 729  * variable bound violations
 730      gen_p_lo_viol_sol(gen)
 731      gen_p_up_viol_sol(gen)
 732      gen_q_lo_viol_sol(gen)
 733      gen_q_up_viol_sol(gen)
 734      solar_p_fx_viol_sol(i)
 735      solar_q_up_viol_sol(i)
 736      solar_q_lo_viol_sol(i)
 737      solar_p_curtail_up_viol_sol(bus)
 738      De_response_Inc_P_up_viol_sol(bus)
 739      De_response_dec_P_lo_viol_sol(bus)
 740      v_shunt_up_viol_sol(bus,bus_s)
 741  * constraint violations
 742      balance_p_viol_sol(i)
 743      balance_q_viol_sol(i)
 744      p_generator_add_viol_sol(gen)
 745      c_I_limit_viol_sol(i,j,c)
 746      c_V_limit_lo_viol_sol(i)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 14
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 747      c_V_limit_up_viol_sol(i)
 748      v_generator_hardupl_viol_sol(i)
 749      v_generator_harddownl_viol_sol(i)
 750      v_under_q_up_slack_viol_sol(gen)
 751      v_over_q_lo_slack_viol_sol(gen)
 752  * summaries
 753      sum_loss_sol
 754  *    v_load_bus_volt_pen_sol
 755  *    v_total_shunt_switching_sol
 756  *    v_shunt_switching_total_penalty_sol
 757  *    v_previous_solution_penalty_sol
 758  *    v_objcost_sol
 759      max_gen_p_lo_viol_sol
 760      max_gen_p_up_viol_sol
 761      max_gen_q_lo_viol_sol
 762      max_gen_q_up_viol_sol
 763      max_solar_p_fx_viol_sol
 764      max_solar_q_up_viol_sol
 765      max_solar_q_lo_viol_sol
 766      max_solar_p_curtail_up_viol_sol
 767      max_De_response_Inc_P_up_viol_sol
 768      max_De_response_dec_P_lo_viol_sol
 769      max_v_shunt_up_viol_sol
 770      max_balance_p_viol_sol
 771      max_balance_q_viol_sol
 772      max_p_generator_add_viol_sol
 773      max_c_I_limit_viol_sol
 774      max_c_V_limit_lo_viol_sol
 775      max_c_V_limit_up_viol_sol
 776      max_v_generator_hardupl_viol_sol
 777      max_v_generator_harddownl_viol_sol
 778      max_v_under_q_up_slack_viol_sol
 779      max_v_over_q_lo_slack_viol_sol;
 780   
 781  * files for output
 782  file report_file /'report.txt'/;
 783  report_file.nr = 2;
 784  report_file.nd = 6;
 785  report_file.pc = 5;
 787  put report_file;
 788  put 'sunlamp crest-vct prototype acopf model' /;
 789  put 'start run' /;
 790  putclose;
 791   
 792  *===== SECTION: DATA MANIPULATION
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/data_manipulation.gms
 794   
 795  gen_participation_factor(gen)
 796    = 1$(sum(bus$(atBus(gen,bus) and businfo(bus,'type','given') eq 3),1) > 0);
 797   
 798  * set shunt penalties to 0
 799  * if this is the first time step
 801  shuntSwitchingPenalty1 = 0;
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 15
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 802  shuntSwitchingPenalty2 = 0;
 803  shuntSwitchingTolerance = 0;
 804  shuntSwitchingBudgetPenalty = 0;
 805  shuntSwitchingBudget = 0;
 807   
 808  display Bswitched;
 809   
 810  *--- Define load, gen buses and active lines
 811  file fx;
 812  put fx;
 813   
 814  load(bus)$(type(bus) eq 1)  = 1;
 815  isSolar(bus)$(sum(solarbus, solarlocation(solarbus,bus)) eq 1) = 1;
 816  isGen(bus)$(not(load(bus))) = 1;
 817  activeGen(bus)$(isGen(bus) and (sum(gen$atBus(gen,bus), status(gen))>0) ) = 1;
 818  option isLine < branchstatus;
 819   
 820  * disable solar
 822   
 823  saturaup(bus)=0;
 824   saturalow(bus)=0;
 825  genQtemp(gen)=0;
 826  *voltageran_low=0.999;
 827  *voltageran_high=1.001;
 828  voltageran_low=1;
 829  voltageran_high=1;
 830  step_leng=0.1;
 831   
 832  * voltage magnitude target will be loaded from a file
 833  * for now set it as the scalar voltage goal
 834   
 835  * load from a gdx file if desired
 836  * this gdx file can be written in the Python simulation code
 837  * after reading from csv
 838  * or else we can read from csv and construct a gdx file in the Gams code
 839  * for now we assume the gdx file is constructed externally to the Gams code
 840  volt_mag_target(bus) = load_bus_voltage_goal;
 841   
 842  * which buses should be subject to a voltage magnitude target deviation penalty?
 843  * for any given bus, if the real power load has a nonzero value,
 844  * then we should penalize the deviation from the voltage magnitude target
 845  bus_penalize_volt_mag_target(bus) = yes$(abs(pd(bus)) > 0 and abs(volt_mag_target(bus)) > 0);
 846   
 847  *===== SECTION: VARIABLE DEFINITION
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/var_declaration.gms
 849  free variables
 850      V_P(gen)           "Real power generation of generator",
 851      V_Q(gen)           "Reactive power generation of generator",
 852      P_S(i)      "real power generation of solar bus"
 853      Q_S(i)      "reactive power generation of solar bus"
 854      V_real(i)          "Real part of bus voltage",
 855      V_imag(i)          "Imaginary part of bus voltage",
 856   
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 16
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 857      V_LineIr(i,j,c)    "Real current flowing from bus i towards bus j on line c",
 858      V_LineIq(i,j,c)    "Reactive current flowing from bus i towards bus j on line c"
 859   
 860      V_Lossijc(i,j,c)      "Loss on line c connecting bus i and bus j"
 861      V_Lossi(i)         "Loss on lines connecting with bus i"
 862      V_switchedshuntB(i) "total susceptance from switched shunts connected to bus i"
 863  ;
 864   
 865  integer variables
 866      V_shunt(bus,bus_s)    "number of shunt steps switched on"
 867  ;
 868   
 869  negative variables
 870      De_response_Dec_P(bus)         "the decrease in demand response"
 871  ;
 872   
 873  positive variables
 874      V_p_over(bus) "real power over"
 875      V_p_under(bus) "real power under"
 876      V_q_over(bus) "reactive power over"
 877      V_q_under(bus) "reactive power under"
 878      Solar_p_curtail(bus)    "the amount of real power cutailed from controllable solar bus"
 879      De_response_Inc_P(bus)         "the increment in demand response"
 880      controlLoad(bus)       "controllableload"
 881      V_load_bus_volt_pen "total penalty from load bus voltage deviation"
 882      V_load_bus_volt_pen_dev(i) "penalized load bus voltage deviation - i.e. deviation less dead band radius"
 883      V_shuntSwitching(i,bus_s) "number of steps switched"
 884      V_totalShuntSwitching "total number of steps switched"
 885      V_shuntSwitchingPenalty(i,bus_s) "defines local shunt switching"
 886      V_shuntTotalSwitchingPenalty "penalty incurred by total shunt switching"
 887      V_shuntSwitchingTotalPenalty "total penalty incurrent by shunt switching"
 888      V_devi(bus)          "absolute value of voltage deviation"
 889      V_pw_cost(gen)    "Generator piecewise cost"
 890      V_dem_Load(demanStep)        "demand load level"
 891  *    V_Pd_elastic(demandbid)     "Elastic incremental demand"
 892  *    V_demandbid_rev(demandbid)  "Revenue from elastic incremental demand"
 893      V_artup(bus)       "artificial variablers"
 894      V_artlow(bus)       "artificial variablers"
 895      V_previous_solution_penalty "total penalty on deviation to previous solution"
 896  ;
 897  * these are not necessary as the vars are defined as positive variables
 898  *V_artup.l(bus)=0;
 899  *V_artlow.l(bus)=0;
 900   
 901  free variable
 902  V_objcost  "Total cost of objective function"
 903  V_objcosttest  "Total cost of objective function"
 904  V_P_system_deviation "system total adjustment from real generation schedule"
 905  ;
 906  *display  V_real.l;
 907  *===== SECTION: EQUATION DECLARATION
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/eqn_declaration.gms
 909  equations
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 17
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 910      c_load_bus_volt_pen_def "defines total load bus voltage deviation penalty"
 911      c_load_bus_volt_pen_dev_def1(i) "first constraint defining penalized load bus voltage deviation"
 912      c_load_bus_volt_pen_dev_def2(i) "second constraint defining penalized load bus voltage deviation"
 913   
 914      c_switchedshuntB_Def(i) "defines total susceptance from switched shunts at bus i"
 915      c_shuntSwitchingDef1(i,bus_s) "defines number of steps switched - side 1"
 916      c_shuntSwitchingDef2(i,bus_s) "defines number of steps switched - side 2"
 917      c_totalShuntSwitchingDef "defines total number of steps switched"
 918      c_shuntSwitchingPenaltyDef1(i,bus_s) "defines local shunt switching penalty - segment 1"
 919      c_shuntSwitchingPenaltyDef2(i,bus_s) "defines local shunt switching penalty - segment 2"
 920      c_shuntTotalSwitchingPenalty "defines penalty incurred by total shunt switching"
 921      c_shuntSwitchingTotalPenaltyDef " defines total penalty incurrent by shunt switching"
 922   
 923      c_I_limit(i,j,c)     "Limit apparent current on a line"
 924      c_V_limit_lo(i)      "Limit voltage magnitude on a line"
 925      c_V_limit_up(i)      "Limit voltage magnitude on a line"
 926      c_LineIrij(i,j,c)    "Real current flowing from bus i into bus j along line c"
 927      c_LineIrji(i,j,c)    "Real  current flowing from bus j into bus i along line c"
 928      c_LineIqij(i,j,c)    "Reactive current  flowing from bus i into bus j along line c"
 929      c_LineIqji(i,j,c)    "Reactive current flowing from bus j into bus i along line c"
 930   
 931      c_Lossijc(i,j,c)     "Loss on line c connecting bus i and bus j"
 932      c_Lossi(i)           "Loss on lines connected with bus i"
 933   
 934      c_BalanceP_nosolar(bus)      "Balance of real power for bus without solar"
 935      c_BalanceP_solar(bus)      "Balance of real power for bus with solar"
 936      c_BalanceP_control_solar(bus)        "balance of real power for controllable solar"
 937      c_BalanceQ_nosolar(bus)      "Balance of reactive power for bus without solar"
 938      c_BalanceQ_solar(bus)      "Balance of reactive power for bus with solar"
 939      v_generator_addup(bus) "generator voltage constraints added selectively"
 940      v_generator_addlow(bus) "generator voltage constraints added"
 941      v_generator_addup_arti(bus)  "generator voltage up constraints added with artificial variables"
 942      v_generator_addlow_arti(bus)  "generator voltage low constraints added with artificial variables"
 943      v_generator_hardupl(bus) "bus voltage constraints upper bound"
 944      v_generator_harddownl(bus) "bus voltage constraints lower bound"
 945      p_generator_add(gen) "enforces generator participation factor in adjustment from schedule"
 946      p_generator_addup(gen) "generator real power constraints added"
 947      p_generator_addlow(gen) "generator real power constraints added"
 948      c_obj  "Objective function"
 949      c_objtest  "Objective function"
 950      c_previous_solution_penalty_def "defines previous solution deviation penalty"
 951      c_gen_q_arctan_v(gen) "smooth arctan formulation of pv/pq complementarity constraint"
 952  ;
 953  *display V_P.l,V_P.up, V_P.lo;
 954  *===== SECTION: EQUATION DEFINITION
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/eqn_definition.gms
 956   
 957  * defines previous solution deviation penalty
 958  c_previous_solution_penalty_def..
 959      V_previous_solution_penalty
 960        =g=
 961      previous_solution_penalty_2 * (
 962          sum(gen, sqr(V_P_prior(gen) - V_P(gen)))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 18
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


 963        + sum(gen, sqr(V_Q_prior(gen) - V_Q(gen)))
 964        + sum(i, sqr(P_S_prior(i) - P_S(i)))
 965        + sum(i, sqr(Q_S_prior(i) - Q_S(i)))
 966        + sum(i, sqr(V_real_prior(i) - V_real(i)))
 967        + sum(i, sqr(V_imag_prior(i) - V_imag(i)))
 968        + sum(i, sqr(Solar_p_curtail_prior(i) - Solar_p_curtail(i)))
 969        + sum(i, sqr(De_response_Inc_P_prior(i) - De_response_Inc_P(i)))
 970        + sum(i, sqr(De_response_Dec_P_prior(i) - De_response_Dec_P(i))));
 971   
 972  * defines total load bus voltage deviation penalty
 973  c_load_bus_volt_pen_def..
 974      V_load_bus_volt_pen
 975        =g=
 976      sum(i$(bus_penalize_volt_mag_target(i) and type(i) eq 1),
 977            load_bus_volt_pen_coeff_1 * V_load_bus_volt_pen_dev(i)
 978          + load_bus_volt_pen_coeff_2 * sqr(V_load_bus_volt_pen_dev(i)))
 979  ;
 980   
 981   
 982   
 983  * defines total susceptance from switched shunts connected to a bus
 984  c_switchedshuntB_def(i)$sum(bus_s$numBswitched(i, bus_s), 1)..
 985      V_switchedshuntB(i)
 986        =e=
 987      sum(bus_s$numBswitched(i,bus_s), Bswitched(i,bus_s) * V_shunt(i,bus_s));
 988   
 989  * defines number of steps switched - side 1
 990  c_shuntSwitchingDef1(i,bus_s)$numBswitched(i,bus_s)..
 991      V_shuntSwitching(i,bus_s)
 992        =g=
 993      V_shunt(i,bus_s) - numShuntStepsOn_init(i,bus_s)
 994  ;
 995   
 996  * defines number of steps switched - side 2
 997  c_shuntSwitchingDef2(i,bus_s)$numBswitched(i,bus_s)..
 998      V_shuntSwitching(i,bus_s)
 999        =g=
1000      numShuntStepsOn_init(i,bus_s) - V_shunt(i,bus_s)
1001  ;
1002   
1003  * defines total number of steps switched
1004  c_totalShuntSwitchingDef..
1005      V_totalShuntSwitching
1006        =g=
1007      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitching(i,bus_s))
1008  ;
1009   
1010  * defines local shunt switching penalty - segment 1
1011  c_shuntSwitchingPenaltyDef1(i,bus_s)$numBswitched(i,bus_s)..
1012      V_shuntSwitchingPenalty(i,bus_s)
1013        =g=
1014      shuntSwitchingPenalty1 * V_shuntSwitching(i,bus_s)
1015  ;
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 19
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


1016   
1017  * defines local shunt switching penalty - segment 2
1018  c_shuntSwitchingPenaltyDef2(i,bus_s)$numBswitched(i,bus_s)..
1019      V_shuntSwitchingPenalty(i,bus_s)
1020        =g=
1021      shuntSwitchingPenalty2 * (V_shuntSwitching(i,bus_s) - shuntSwitchingTolerance)
1022  ;
1023   
1024  * defines penalty incurred by total shunt switching
1025  c_shuntTotalSwitchingPenalty..
1026      V_shuntTotalSwitchingPenalty
1027        =g=
1028      shuntSwitchingBudgetPenalty * (V_totalShuntSwitching - shuntSwitchingBudget)
1029  ;
1030   
1031  * defines total penalty incurrent by shunt switching
1032  c_shuntSwitchingTotalPenaltyDef..
1033      V_shuntSwitchingTotalPenalty
1034        =g=
1035      V_shuntTotalSwitchingPenalty +
1036      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitchingPenalty(i,bus_s))
1037  ;
1038   
1039  * Limit apparent current on a line
1040  c_I_limit(i,j,c)$(branchstatus(i,j,c) or branchstatus(j,i,c))..
1041      sqr(V_LineIr(i,j,c)) + sqr(V_LineIq(i,j,c))
1042        =l=
1043      sqr(currentrate(i,j,c))
1044  ;
1045   
1046  *Limit voltage magnitude on a line
1047  c_V_limit_lo(i)..
1048      sqr(V_real(i)) + sqr(V_imag(i)) =g= sqr(minVm(i))
1049  ;
1050   
1051  *Limit voltage magnitude on a line
1052  c_V_limit_up(i)..
1053      sqr(V_real(i)) + sqr(V_imag(i)) =l= sqr(maxVm(i))
1054  ;
1055   
1056  *Real current flowing from bus i into bus j along line c
1057  c_LineIrij(i,j,c)$(branchstatus(i,j,c))..
1058           V_LineIr(i,j,c) =e=
1059              1/sqr(ratio(i,j,c))
1060                  * (g(i,j,c)*V_real(i) - (b(i,j,c) + bc(i,j,c)/2)*V_imag(i))
1061              - 1/ratio(i,j,c)
1062                  * (  (g(i,j,c)*V_real(j) - b(i,j,c)*V_imag(j))*cos(angle(i,j,c))
1063                     - (g(i,j,c)*V_imag(j) + b(i,j,c)*V_real(j))*sin(angle(i,j,c))
1064                    )
1065  ;
1066   
1067  *Real current flowing from bus j into bus i along line c
1068  c_LineIrji(i,j,c)$(branchstatus(i,j,c))..
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 20
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


1069           V_LineIr(j,i,c) =e=
1070              (g(i,j,c)*V_real(j) - (b(i,j,c) + bc(i,j,c)/2)*V_imag(j))
1071              - 1/ratio(i,j,c)
1072                  * (  (g(i,j,c)*V_real(i) - b(i,j,c)*V_imag(i))*cos(-angle(i,j,c))
1073                     - (g(i,j,c)*V_imag(i) + b(i,j,c)*V_real(i))*sin(-angle(i,j,c))
1074                    )
1075  ;
1076   
1077  *Reactive current flowing from bus i into bus j along line c
1078  c_LineIqij(i,j,c)$(branchstatus(i,j,c))..
1079           V_LineIq(i,j,c) =e=
1080              1/sqr(ratio(i,j,c))
1081                  * (g(i,j,c)*V_imag(i) + (b(i,j,c) + bc(i,j,c)/2)*V_real(i))
1082              - 1/ratio(i,j,c)
1083                  * (  (g(i,j,c)*V_imag(j) + b(i,j,c)*V_real(j))*cos(angle(i,j,c))
1084                     + (g(i,j,c)*V_real(j) - b(i,j,c)*V_imag(j))*sin(angle(i,j,c))
1085                    )
1086  ;
1087   
1088  *Reactive current flowing from bus j into bus i along line c
1089  c_LineIqji(i,j,c)$(branchstatus(i,j,c))..
1090           V_LineIq(j,i,c) =e=
1091              (g(i,j,c)*V_imag(j) + (b(i,j,c) + bc(i,j,c)/2)*V_real(j))
1092              - 1/ratio(i,j,c)
1093                  * (  (g(i,j,c)*V_imag(i) + b(i,j,c)*V_real(i))*cos(-angle(i,j,c))
1094                     + (g(i,j,c)*V_real(i) - b(i,j,c)*V_imag(i))*sin(-angle(i,j,c))
1095                    )
1096  ;
1097   
1098  *Balance of real power for bus without solar
1099  c_BalanceP_nosolar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus,i)) eq 0))..
1100          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
1101          - (Pd(i)+ demLoad('1')$(demLocation(i) eq 1)+sum(demanStep ,V_dem_Load(demanStep))$(demLocation(i) eq 1)+ De_response_Inc_P(i)$(Pd_respon_location(i)) + De_response_Dec_P(i)$(Pd_respon_location(i))   )
1102          + V_p_over(i)
1103          - V_p_under(i)
1104              =e=
1105            V_real(i) *
1106          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
1107            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr(i,j,c)) )
1108          + V_imag(i) *
1109           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
1110            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq(i,j,c)))
1111          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
1112  ;
1113  *Balance of real power for bus with uncontrollable solar installed
1114  c_BalanceP_solar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus,i)) ne 0) and contro_solar_location(i) eq 0)..
1115          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
1116           - (Pd(i)+ demLoad('1')$(demLocation(i) eq 1)+sum(demanStep ,V_dem_Load(demanStep))$(demLocation(i) eq 1)- P_S(i)+De_response_Inc_P(i)$(Pd_respon_location(i)) + De_response_Dec_P(i)$(Pd_respon_location(i)))
1117          + V_p_over(i)
1118          - V_p_under(i)
1119              =e=
1120            V_real(i) *
1121          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 21
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


1122            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr(i,j,c)) )
1123          + V_imag(i) *
1124           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
1125            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq(i,j,c)))
1126          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
1127  ;
1128   
1129  c_BalanceP_control_solar(i)$(type(i) ne 4 and  contro_solar_location(i) ne 0)..
1130          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
1131           - (Pd(i)+ demLoad('1')$(demLocation(i) eq 1)+sum(demanStep ,V_dem_Load(demanStep))$(demLocation(i) eq 1)+ De_response_Inc_P(i)$(Pd_respon_location(i))+ De_response_Dec_P(i)$(Pd_respon_location(i)) - (P_S(i)-Solar_p_curtail(i) ))
1132          + V_p_over(i)
1133          - V_p_under(i)
1134              =e=
1135            V_real(i) *
1136          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
1137            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr(i,j,c)) )
1138          + V_imag(i) *
1139           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
1140            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq(i,j,c)))
1141          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
1142  ;
1143  * Balance of reactive power for bus without solar
1144  c_BalanceQ_nosolar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus,i)) eq 0))..
1145          sum(gen$(atBus(gen,i) and status(gen)), V_Q(gen))
1146          - (Qd(i)+Pd_respon_q_up(i)*De_response_Inc_P(i)$(Pd_respon_location(i)) + Pd_respon_q_down(i)*De_response_Dec_P(i)$(Pd_respon_location(i))  )
1147          + V_q_over(i)
1148          - V_q_under(i)
1149              =e=
1150          - V_real(i) *
1151          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
1152            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq(i,j,c)))
1153          + V_imag(i) *
1154          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
1155            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr(i,j,c)))
1156          - (Bs(i) + V_switchedshuntB(i)$sum(bus_s$numbswitched(i, bus_s), 1)) * (sqr(V_real(i)) + sqr(V_imag(i)));
1157  ;
1158  * Balance of reactive power for bus with solar
1159  c_BalanceQ_solar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus,i)) ne 0))..
1160          sum(gen$(atBus(gen,i) and status(gen)), V_Q(gen))
1161          - ( Qd(i)+ Pd_respon_q_up(i)*De_response_Inc_P(i)$(Pd_respon_location(i)) + Pd_respon_q_down(i)*De_response_Dec_P(i)$(Pd_respon_location(i)) - Q_S(i) )
1162          + V_q_over(i)
1163          - V_q_under(i)
1164              =e=
1165          - V_real(i) *
1166          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
1167            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq(i,j,c)))
1168          + V_imag(i) *
1169          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
1170            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr(i,j,c)))
1171          - (Bs(i) + V_switchedshuntB(i)$sum(bus_s$numbswitched(i, bus_s), 1)) * (sqr(V_real(i)) + sqr(V_imag(i)));
1172  ;
1173   
1174  * Loss on line c connecting bus i and bus j
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 22
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


1175  c_Lossijc(i,j,c)$(branchstatus(i,j,c))..
1176            V_Lossijc(i,j,c) =e=
1177                 g(i,j,c)/( sqr(b(i,j,c))+ sqr(g(i,j,c)) ) * (  sqr(V_LineIr(i,j,c))+ sqr(V_LineIq(i,j,c)) )
1178  ;
1179   
1180  *Loss on lines connected with bus i
1181  c_Lossi(i)..
1182         V_Lossi(i) =e=
1183                sum((j,c)$(branchstatus(i,j,c)),V_Lossijc(i,j,c))
1184  ;
1185   
1186  * generator bus voltage set points enforced with violation variables
1187  v_generator_addup(i)$(sum(gen,status2(gen,i)) eq 1 and saturaup(i) eq 0)..
1188           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= voltageran_high*Vsch(i)
1189  ;
1190  v_generator_addlow(i)$(sum(gen,status2(gen,i)) eq 1 and saturalow(i) eq 0)..
1191           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= voltageran_low*Vsch(i)
1192  ;
1193   
1194   
1195  v_generator_addup_arti(i)$(sum(gen,status2(gen,i)) eq 1 )..
1196           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= voltageran_high*Vsch(i) + V_artup(i)
1197  ;
1198  v_generator_addlow_arti(i)$(sum(gen,status2(gen,i)) eq 1 )..
1199           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= voltageran_low*Vsch(i) - V_artlow(i)
1200  ;
1201   
1202  v_generator_hardupl(i)..
1203           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= 1.15
1204  ;
1205   
1206  v_generator_harddownl(i)..
1207           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= 0.88
1208  ;
1209   
1210  * enforces generator participation factor in adjustment from schedule
1211  p_generator_add(gen)$(status(gen) eq 1 and abs(gen_participation_factor(gen)))..
1212           V_P(gen) =e= PgSch(gen) + gen_participation_factor(gen) * V_P_system_deviation
1213  ;
1214   
1215  p_generator_addup(gen)$(status(gen) eq 1 and gentype(gen) eq 1)..
1216           V_P(gen) =l= 1.001*PgSch(gen)
1217  ;
1218  p_generator_addlow(gen)$(status(gen) eq 1 and gentype(gen) eq 1 and PgSch(gen) > 0 )..
1219           V_P(gen) =g= 0.999*PgSch(gen)
1220   
1221  ;
1222  *solar bus active power constraints uppr bound
1223  ;
1224  * WARNING TODO JH this equation has an error
1225  * causes infeasibility
1226  * e.g. 0 =g= 1e-6
1227  *
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 23
"AC optimal power flow model, rectangular current-voltage formulation"
C o m p i l a t i o n


1228  * fixed it
1229  * Xinda can you check that this is correct?
1230  * am I understanding the data and model correctly?
1231  *solar bus  power constraints lower bound
1232  ;
1233   
1234   
1235  * Objective functions and pwl costs are listed in a separate file
1236  *$batinclude "%filepath%objective_voltage_stability_addterm.gms" obj demandbids
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 24
Cost objective calculations for OPF models
C o m p i l a t i o n


1238  *this file is modified by Xinda Ke from Wisconsin university IV_acopf.gms
1239  *updated by Xinda ke in 7/26/2016
1240   
      * Set costmodel variable
      costmodel(gen)= 2;
       
      *-- Convexity Check
      * Not part of system of equations
      * LP/QCP/NLP can't handle nonconvex piecewise linear cost functions
      set thisgen(gen);
       
      parameters cur_slope, next_slope;
      loop(gen$(status(gen) and (costmodel(gen) eq 1) and (numcostpts(gen) > 2)),
          next_slope = (costpts_y(gen,'2') - costpts_y(gen,'1'))
                       / (costpts_x(gen,'2') - costpts_x(gen,'1'));
          loop(costptset$(ord(costptset) < numcostpts(gen) - 1),
              cur_slope = next_slope;
              if((ord(costptset) < numcostpts(gen) - 2) and (costpts_x(gen,costptset+2) eq costpts_x(gen,costptset+1)),
                  abort "Zero-length piecewise segment detected";
              );
              next_slope = (costpts_y(gen,costptset+2) - costpts_y(gen,costptset+1))
                           / (costpts_x(gen,costptset+2) - costpts_x(gen,costptset+1))
       
              if(cur_slope - next_slope > 1e-8,
                  thisgen(gen1)=no; thisgen(gen)=yes;
                  display thisgen;
                  abort "Nonconvex piecewise linear costs not supported";
              );
          );
      );
1270   
1271  *===== SECTION: EQUATIONS PART 2
1272  * Defining piecewise linear generator cost curves
1273  * P is in per-unit, costpts_x is in MW, and costpts_y is in $/hr
1274   
1275   
1277   
1278   
1279   
1280   
1281  c_obj..
1282      V_objcost =e=
1283             V_shuntSwitchingTotalPenalty
1284  * + 500*sum(gen, abs(V_P(gen) -Pg(gen)))
1285  +5000000*sum(gen, V_P(gen)-Pg(gen))
1286  *penalty for contro_solar_pout
1287           -sum(demanStep ,demSlope(demanStep)*V_dem_Load(demanStep))
1288           + sum(i,sqr(P_S(i))*dis_gen_par1(i)+P_S(i)*dis_gen_par2(i)+dis_gen_par3(i))
1289           + solar_curtail_penalty * sum(i,Solar_p_curtail(i))
1290           + demand_response_increase_penalty * sum(i,De_response_Inc_P(i))
1291           - demand_response_decrease_penalty * sum(i,De_response_Dec_P(i))
1292  *the demand response q is comment out because it change with respose to p
1293  *+5*sum(i,De_response_Inc_Q(i))-5*sum(i,De_response_Dec_Q(i))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 25
Cost objective calculations for OPF models
C o m p i l a t i o n


1294  *the term of line losses. tobe checked, tobe verified
1295  *         + sum(i,V_Lossi(i))
1296           + V_previous_solution_penalty
1297  *the penalty for power balancing relaxation
1298  *         + %balance_constr_penalty% * (
1299  *               sum(i,V_p_over(i))
1300  *             + sum(i,V_p_under(i))
1301  *             + sum(i,V_q_over(i))
1302  *             + sum(i,V_q_under(i)))
1303  ;
1304   
1305  c_objtest..
1306      V_objcosttest =e=
1307             V_shuntSwitchingTotalPenalty
1308  *+ 500*sum(gen, abs(V_P(gen) -Pg(gen)))
1309  + 5000000*sum(gen, V_P(gen)-Pg(gen))
1310           -sum(demanStep ,demSlope(demanStep)*V_dem_Load(demanStep))
1311           + sum(i,sqr(P_S(i))*dis_gen_par1(i)+P_S(i)*dis_gen_par2(i)+dis_gen_par3(i))
1312  *penalty for contro_solar_pout
1313           + solar_curtail_penalty * sum(i,Solar_p_curtail(i))
1314           + demand_response_increase_penalty * sum(i,De_response_Inc_P(i))
1315           - demand_response_decrease_penalty * sum(i,De_response_Dec_P(i))
1316  *the demand response q is comment out because it change with respose to p
1317  *+5*sum(i,De_response_Inc_Q(i))-5*sum(i,De_response_Dec_Q(i))
1318  *the term of line losses. tobe checked, tobe verified
1319  *         + sum(i,V_Lossi(i))
1320  * artificial variables is included in objective function with high penalty cost
1321           + generator_voltage_deviation_penalty
1322               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artup(bus))
1323           + generator_voltage_deviation_penalty
1324               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artlow(bus))
1325           + V_previous_solution_penalty
1326  *the penalty for power balancing relaxation
1327  *         + %balance_constr_penalty% * (
1328  *               sum(i,V_p_over(i))
1329  *             + sum(i,V_p_under(i))
1330  *             + sum(i,V_q_over(i))
1331  *             + sum(i,V_q_under(i)))
1332  ;
1333   
1334  c_gen_q_arctan_v(gen)$status(gen)..
1335      v_q(gen) =e=
1336      qmin(gen) +
1337      (qmax(gen) - qmin(gen))
1338      * (0.5 -
1339         (1 / pi) *
1340         arctan(
1341             sum(bus$atbus(gen,bus),
1342                 sqrt(sqr(v_real(bus)) + sqr(v_imag(bus))) - vsch(bus)) /
1343             pv_pq_smoothing_param));
1344  *display Pmax, Pmin, V_P.l;
1345  *===== SECTION: MODEL DEFINITION
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/mod_definition.gms
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 26
Cost objective calculations for OPF models
C o m p i l a t i o n


1347   
1348  model base_model /
1350  **    c_I_limit
1351  **    c_V_limit_lo
1352  **    c_V_limit_up
1353      c_LineIrij
1354      c_LineIrji
1355      c_LineIqij
1356      c_LineIqji
1357      c_BalanceP_nosolar
1358      c_BalanceP_solar
1359      c_BalanceQ_nosolar
1360      c_BalanceQ_solar
1361      c_Lossijc
1362      c_Lossi
1363      v_generator_hardupl
1364      v_generator_harddownl
1365      p_generator_add
1366      c_BalanceP_control_solar
1367      c_switchedshuntB_def
1368      c_shuntSwitchingDef1
1369      c_shuntSwitchingDef2
1370      c_totalShuntSwitchingDef
1371      c_shuntSwitchingPenaltyDef1
1372      c_shuntSwitchingPenaltyDef2
1373      c_shuntTotalSwitchingPenalty
1374      c_shuntSwitchingTotalPenaltyDef
1375      c_previous_solution_penalty_def
1376      /;
1377  model feas /
1378      base_model
1379      v_generator_addup
1380      v_generator_addlow
1381      /;
1382  model test /
1383      base_model
1384      v_generator_addup_arti
1385      v_generator_addlow_arti
1386      /;
1387  model acopf /
1388      feas
1389      c_obj
1390      /;
1391  model acopf_check /
1392      test
1393      c_objtest
1394      /;
1395  model acopf_arctan /
1396      base_model
1397      c_gen_q_arctan_v
1398      c_obj /;
1399  display Pmax, Pmin, Pd, Va, Vm, Qg, Gs, b, bc;
1400  *===== SECTION: VARIABLE BOUNDS
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 27
Cost objective calculations for OPF models
C o m p i l a t i o n


INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/var_bounds.gms
1402   
1403  * shunt switching
1404  V_shunt.lo(bus,bus_s)$numBswitched(bus,bus_s) = 0;
1405  V_shunt.up(bus,bus_s)$numBswitched(bus,bus_s) = numBswitched(bus,bus_s);
1407  V_shunt.fx(bus,bus_s)$numBswitched(bus,bus_s) = numShuntStepsOn_init(bus,bus_s);
1409   
1410   
1411  * Generator active power generation limits
1412  V_P.lo(gen)$(status(gen) and abs(gen_participation_factor(gen))) = Pg(gen);
1413  V_P.up(gen)$(status(gen) and abs(gen_participation_factor(gen))) = Pmax(gen);
1414  V_P.fx(gen)$(status(gen) and not abs(gen_participation_factor(gen))) = PgSch(gen);
1415  V_P.fx(gen)$(not status(gen)) = 0;
1416   
1417  *display V_P.lo, Pg;
1419  Solar_p_curtail.fx(bus)=0;
1420  contro_solar_location(bus) = 0;
1422   
1423   
1424   
1425  V_dem_Load.up(demanStep)$(ord(demanStep) > 1)=  demLoad(demanStep)-demLoad(demanStep-1);
1426  V_dem_Load.fx('1')=0;
1427  Q_s.lo('13')=-300;
1428  Q_s.lo('57')=-300;
1429  Q_s.up('13')=300;
1430  Q_s.up('57')=300;
1431   
1432   
1433  P_S.lo('13')=0.03/baseMVA;
1434  P_S.lo('57')=0.02/baseMVA;
1435  P_S.up('13')=0.3/baseMVA;
1436  P_S.up('57')=0.25/baseMVA;
1437   
1438   
1439   
1440   
1441  De_response_Inc_P.up(bus)$(Pd_respon_location(bus))=Pd_respon_p_up(bus);
1442  De_response_Inc_P.lo(bus)$(Pd_respon_location(bus))=0;
1443  De_response_Inc_P.fx(bus)$(not Pd_respon_location(bus))=0;
1444   
1445  De_response_Dec_P.lo(bus)$(Pd_respon_location(bus))=Pd_respon_p_down(bus);
1446  De_response_Dec_P.up(bus)$(Pd_respon_location(bus))=0;
1447  De_response_Dec_P.fx(bus)$(not Pd_respon_location(bus))=0;
1448   
1449   
1450   
1451  * disable demand response
1453   
1454  * Generator reactive power generation limits
1455  * Does not impose Qmax, Qmin limits when the D-curve contraint is applied
1456  *$ifthen %qlim% == 0
1457  V_Q.lo(gen)$status(gen) = Qmin(gen);
1458  V_Q.up(gen)$status(gen) = Qmax(gen);
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 28
Cost objective calculations for OPF models
C o m p i l a t i o n


1459  *$endif
1460  V_Q.fx(gen)$(not status(gen)) = 0;
1461  *display V_Q.l, V_Q.up, V_Q.lo;
1462  * Bus voltage magnitude limits
1463  * Note these bounds are numerically helpful
1464  * even if they are not necessary for the correctness
1465  * of the formulation
1466  V_real.lo(bus) = -MaxVm(bus); V_real.up(bus) = MaxVm(bus);
1467  V_imag.lo(bus) = -MaxVm(bus); V_imag.up(bus) = MaxVm(bus);
1468  V_imag.fx(bus)$(type(bus) eq 3) = 0;
1469   
1470  * disable solar q
1472   
1473   
1474  * soft power balance constraints
1475  balance_real_bound=0.01;
1476  balance_react_bound=0.01;
1478  V_p_over.fx(i) = 0;
1479  V_p_under.fx(i) = 0;
1480  V_q_over.fx(i) = 0;
1481  V_q_under.fx(i) = 0;
1483   
1484  *===== SECTION: VARIABLE START VALUES
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/start_point.gms
1486   
1487  * Set initial conditions
BATINCLUDE /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/preset.gms
      sets values for some variables that might not otherwise be set
1492   
1493  V_P.l(gen) = 0;
1494  V_Q.l(gen) = 0;
1495  V_LineIr.l(i,j,c) = 0;
1496  V_LineIq.l(i,j,c) = 0;
1497  V_P_system_deviation.l = 0;
1498  V_switchedshuntB.l(i)$sum(bus_s$numBswitched(i,bus_s), 1) = 0;
1499  V_shunt.l(bus,bus_s)$numBswitched(bus,bus_s) = 0;
1500  *P_S.l(i)$(isSolar(i) and contro_solar_location(i) ne 1) = solar_r(i);
1501  *P_S.l(i)$(isSolar(i) and contro_solar_location(i) eq 1) = contro_solar_pout(i);
1502  Q_S.l(i)$isSolar(i) = 0;
1503  solar_p_curtail.l(bus)$contro_solar_location(bus) = 0;
1504  de_response_dec_p.l(bus)$pd_respon_location(bus) = 0;
1505  de_response_inc_p.l(bus)$pd_respon_location(bus) = 0;
1506   
BATINCLUDE /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/given.gms
      Use given initial conditions for Polar ACOPF.
1511   
1513   
1514  V_P.l(gen) = Pg(gen)$status(gen);
1515  V_Q.l(gen) = Qg(gen)$status(gen);
1516  V_real.l(bus) = Vm(bus)*cos(Va(bus));
1517  V_imag.l(bus) = Vm(bus)*sin(Va(bus));
1518  V_switchedshuntB.l(i)$sum(bus_s$numBswitched(i,bus_s), 1) = switchedshuntB_init(i);
1519  V_shunt.l(bus,bus_s)$numBswitched(bus,bus_s)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 29
Cost objective calculations for OPF models
C o m p i l a t i o n


1520    = switchedshuntB_init(bus) * numBswitched(bus,bus_s)
1521    / sum(bus_s_1, numBswitched(bus,bus_s_1) * Bswitched(bus,bus_s_1));
1522   
1523  *Parameter Bs_solved(bus);
1524  *Bs_solved(bus) = businfo(bus,'switchedBsSolved','%timeperiod%')/baseMVA;
1525  *loop((bus,bus_s)$((not sameas(bus_s,'given') and (Bswitched(bus,bus_s) ne 0)) and (abs(Bs_solved(bus)) > 1e-6)),
1526  *    V_shunt.l(bus,bus_s) = min(Bs_solved(bus)/Bswitched(bus,bus_s), V_shunt.up(bus,bus_s));
1527  *    Bs_solved(bus) = Bs_solved(bus) - V_shunt.l(bus,bus_s)*Bswitched(bus,bus_s);
1528  *);
1529   
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/calc_derived_vars.gms
      independent variables V_real and V_imag are set prior to this code
      other independent variables are set here
      then dependent variables are computed here - including objective
      finally we could check constraint violations - e.g. balance constraints
1537   
1538  *--------------------
1539  * derived variables -
1540  *--------------------
1541   
1542           V_LineIr.l(i,j,c)$(branchstatus(i,j,c)) =
1543              1/sqr(ratio(i,j,c))
1544                  * (g(i,j,c)*V_real.l(i) - (b(i,j,c) + bc(i,j,c)/2)*V_imag.l(i))
1545              - 1/ratio(i,j,c)
1546                  * (  (g(i,j,c)*V_real.l(j) - b(i,j,c)*V_imag.l(j))*cos(angle(i,j,c))
1547                     - (g(i,j,c)*V_imag.l(j) + b(i,j,c)*V_real.l(j))*sin(angle(i,j,c)));
1548   
1549           V_LineIr.l(j,i,c)$(branchstatus(i,j,c)) =
1550              (g(i,j,c)*V_real.l(j) - (b(i,j,c) + bc(i,j,c)/2)*V_imag.l(j))
1551              - 1/ratio(i,j,c)
1552                  * (  (g(i,j,c)*V_real.l(i) - b(i,j,c)*V_imag.l(i))*cos(-angle(i,j,c))
1553                     - (g(i,j,c)*V_imag.l(i) + b(i,j,c)*V_real.l(i))*sin(-angle(i,j,c)));
1554   
1555           V_LineIq.l(i,j,c)$(branchstatus(i,j,c)) =
1556              1/sqr(ratio(i,j,c))
1557                  * (g(i,j,c)*V_imag.l(i) + (b(i,j,c) + bc(i,j,c)/2)*V_real.l(i))
1558              - 1/ratio(i,j,c)
1559                  * (  (g(i,j,c)*V_imag.l(j) + b(i,j,c)*V_real.l(j))*cos(angle(i,j,c))
1560                     + (g(i,j,c)*V_real.l(j) - b(i,j,c)*V_imag.l(j))*sin(angle(i,j,c)));
1561   
1562           V_LineIq.l(j,i,c)$(branchstatus(i,j,c)) =
1563              (g(i,j,c)*V_imag.l(j) + (b(i,j,c) + bc(i,j,c)/2)*V_real.l(j))
1564              - 1/ratio(i,j,c)
1565                  * (  (g(i,j,c)*V_imag.l(i) + b(i,j,c)*V_real.l(i))*cos(-angle(i,j,c))
1566                     + (g(i,j,c)*V_real.l(i) - b(i,j,c)*V_imag.l(i))*sin(-angle(i,j,c)));
1567   
1568      V_devi.l(i)$(sum(gen,status2(gen,i)) eq 1 ) =
1569      abs(sqrt(sqr(V_real.l(i)) + sqr(V_imag.l(i))) - Vsch(i));
1570   
1571      V_artup.l(i)$(sum(gen,status2(gen,i)) eq 1 ) =
1572      max(0,
1573      sqrt(sqr(V_real.l(i)) + sqr(V_imag.l(i))) - voltageran_high*Vsch(i));
1574   
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 30
Cost objective calculations for OPF models
C o m p i l a t i o n


1575      V_artlow.l(i)$(sum(gen,status2(gen,i)) eq 1 ) =
1576      max(0,
1577      voltageran_low*Vsch(i) - sqrt(sqr(V_real.l(i)) + sqr(V_imag.l(i))));
1578   
1579      V_Lossijc.l(i,j,c)$(branchstatus(i,j,c)) =
1580      g(i,j,c) / (sqr(b(i,j,c)) + sqr(g(i,j,c))) *
1581      (sqr(V_LineIr.l(i,j,c)) + sqr(V_LineIq.l(i,j,c)));
1582   
1583      V_Lossi.l(i) =
1584      sum((j,c)$(branchstatus(i,j,c)),V_Lossijc.l(i,j,c));
1585   
1586      V_load_bus_volt_pen_dev.l(i)$bus_penalize_volt_mag_target(i) =
1587      max(
1588        sqrt(sqr(V_real.l(i)) + sqr(V_imag.l(i)))
1589      - load_bus_voltage_goal
1590      - load_bus_volt_dead_band,
1591        load_bus_voltage_goal
1592      - sqrt(sqr(V_real.l(i)) + sqr(V_imag.l(i)))
1593      - load_bus_volt_dead_band);
1594   
1595      V_load_bus_volt_pen.l =
1596      max(0,
1597      sum(i$bus_penalize_volt_mag_target(i),
1598            load_bus_volt_pen_coeff_1 * V_load_bus_volt_pen_dev.l(i)
1599          + load_bus_volt_pen_coeff_2 * sqr(V_load_bus_volt_pen_dev.l(i))));
1600   
1601      V_shuntSwitching.l(i,bus_s)$numBswitched(i,bus_s) =
1602      abs(V_shunt.l(i,bus_s) - numShuntStepsOn_init(i,bus_s));
1603   
1604      V_shuntSwitchingPenalty.l(i,bus_s)$numBswitched(i,bus_s) =
1605      max(0,
1606      shuntSwitchingPenalty1 * V_shuntSwitching.l(i,bus_s),
1607      shuntSwitchingPenalty2 * (V_shuntSwitching.l(i,bus_s) - shuntSwitchingTolerance));
1608   
1609      V_totalShuntSwitching.l =
1610      max(0,
1611      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitching.l(i,bus_s)));
1612   
1613      V_shuntTotalSwitchingPenalty.l =
1614      max(0,
1615      shuntSwitchingBudgetPenalty * (V_totalShuntSwitching.l - shuntSwitchingBudget));
1616   
1617      V_shuntSwitchingTotalPenalty.l =
1618      max(0,
1619      V_shuntTotalSwitchingPenalty.l +
1620      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitchingPenalty.l(i,bus_s)));
1621   
1622      V_previous_solution_penalty.l = 0;
1623   
1624      V_objcost.l =
1625             V_shuntSwitchingTotalPenalty.l
1626           + V_load_bus_volt_pen.l
1627           + solar_curtail_penalty * sum(i,Solar_p_curtail.l(i))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 31
Cost objective calculations for OPF models
C o m p i l a t i o n


1628           + demand_response_increase_penalty * sum(i,De_response_Inc_P.l(i))
1629           - demand_response_decrease_penalty * sum(i,De_response_Dec_P.l(i))
1630           + sum(i,V_Lossi.l(i))
1631           + V_previous_solution_penalty.l;
1632   
1633      V_objcosttest.l =
1634             V_objcost.l
1635           + generator_voltage_deviation_penalty
1636               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artup.l(bus))
1637           + generator_voltage_deviation_penalty
1638               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artlow.l(bus));
1639   
1641   
1642  * set prior values of distance-penalized variables
1643  * to their current levels.
1644  V_P_prior(gen) = V_P.l(gen);
1645  V_Q_prior(gen) = V_Q.l(gen);
1646  P_S_prior(i) = P_S.l(i);
1647  Q_S_prior(i) = Q_S.l(i);
1648  V_real_prior(i) = V_real.l(i);
1649  V_imag_prior(i) = V_imag.l(i);
1650  Solar_p_curtail_prior(i) = Solar_p_curtail.l(i);
1651  De_response_Inc_P_prior(i) = De_response_Inc_P.l(i);
1652  De_response_Dec_P_prior(i) = De_response_Dec_P.l(i);
1653   
1654  display V_real.l, V_imag.l, Vm;
1655   
1656   
1657  *===== SECTION: COMPUTE START METRICS
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/compute_start_metrics.gms
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 32
compute_start_metrics
C o m p i l a t i o n


      evaluate individual componenets of feasibility and optimality for the start point
1663   
1664  * set these from variable levels
1665      V_P_start(gen) = V_P.l(gen);
1666      V_Q_start(gen) = V_Q.l(gen);
1667      P_S_start(i) = P_S.l(i);
1668      Q_S_start(i) = Q_S.l(i);
1669      V_real_start(i) = V_real.l(i);
1670      V_imag_start(i) = V_imag.l(i);
1671      Solar_p_curtail_start(i) = solar_p_curtail.l(i);
1672      De_response_Dec_P_start(i) = de_response_dec_p.l(i);
1673      De_response_Inc_P_start(i) = de_response_inc_p.l(i);
1674      V_switchedshuntB_start(i)$sum(bus_s$numBswitched(i,bus_s), 1) = V_switchedshuntB.l(i);
1675      V_shunt_start(bus,bus_s) = v_shunt.l(bus,bus_s);
1676      V_P_system_deviation_start = v_p_system_deviation.l;
1677      V_LineIr_start(i,j,c)$(branchstatus(i,j,c)) = V_LineIr.l(i,j,c);
1678      V_LineIr_start(j,i,c)$(branchstatus(i,j,c)) = V_LineIr.l(j,i,c);
1679      V_LineIq_start(i,j,c)$(branchstatus(i,j,c)) = V_LineIq.l(i,j,c);
1680      V_LineIq_start(j,i,c)$(branchstatus(i,j,c)) = V_LineIq.l(j,i,c);
1681   
1682  * compute losses
1683      V_Lossijc_start(i,j,c)$(branchstatus(i,j,c)) =
1684                 g(i,j,c)/( sqr(b(i,j,c))+ sqr(g(i,j,c)) ) * (  sqr(V_LineIr_start(i,j,c))+ sqr(V_LineIq_start(i,j,c)) );
1685      V_Lossi_start(i) = sum((j,c)$(branchstatus(i,j,c)),V_Lossijc_start(i,j,c));
1686   
1687  * compute penalties and objectives
1688      V_load_bus_volt_pen_dev_start(i)$bus_penalize_volt_mag_target(i) = abs(
1689            sqrt(sqr(V_real_start(i)) + sqr(V_imag_start(i)))
1690          - volt_mag_target(i)
1691          - load_bus_volt_dead_band);
1692      V_load_bus_volt_pen_start =
1693          sum(i$bus_penalize_volt_mag_target(i),
1694                load_bus_volt_pen_coeff_1 * V_load_bus_volt_pen_dev_start(i)
1695              + load_bus_volt_pen_coeff_2 * sqr(V_load_bus_volt_pen_dev_start(i)));
1696      V_shuntSwitching_start(i,bus_s)$numBswitched(i,bus_s) =
1697          abs(V_shunt_start(i,bus_s) - numShuntStepsOn_init(i,bus_s));
1698      V_totalShuntSwitching_start =
1699          sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitching_start(i,bus_s));
1700      V_shuntSwitchingPenalty_start(i,bus_s)$numBswitched(i,bus_s) = max(0,
1701          shuntSwitchingPenalty1 * V_shuntSwitching_start(i,bus_s),
1702          shuntSwitchingPenalty2 * (V_shuntSwitching_start(i,bus_s) - shuntSwitchingTolerance));
1703      V_shuntTotalSwitchingPenalty_start =
1704          shuntSwitchingBudgetPenalty * max(0, V_totalShuntSwitching_start - shuntSwitchingBudget);
1705      V_shuntSwitchingTotalPenalty_start =
1706            V_shuntTotalSwitchingPenalty_start
1707          + sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitchingPenalty_start(i,bus_s));
1708      V_previous_solution_penalty_start =
1709        previous_solution_penalty_2 * (
1710            sum(gen, sqr(V_P_prior(gen) - V_P_start(gen)))
1711          + sum(gen, sqr(V_Q_prior(gen) - V_Q_start(gen)))
1712          + sum(i, sqr(P_S_prior(i) - P_S_start(i)))
1713          + sum(i, sqr(Q_S_prior(i) - Q_S_start(i)))
1714          + sum(i, sqr(V_real_prior(i) - V_real_start(i)))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 33
compute_start_metrics
C o m p i l a t i o n


1715          + sum(i, sqr(V_imag_prior(i) - V_imag_start(i)))
1716          + sum(i, sqr(Solar_p_curtail_prior(i) - Solar_p_curtail_start(i)))
1717          + sum(i, sqr(De_response_Inc_P_prior(i) - De_response_Inc_P_start(i)))
1718          + sum(i, sqr(De_response_Dec_P_prior(i) - De_response_Dec_P_start(i))));
1719      V_objcost_start =
1720             V_shuntSwitchingTotalPenalty_start
1721           + V_load_bus_volt_pen_start
1722           + solar_curtail_penalty * sum(i,Solar_p_curtail_start(i))
1723           + demand_response_increase_penalty * sum(i,De_response_Inc_P_start(i))
1724           - demand_response_decrease_penalty * sum(i,De_response_Dec_P_start(i))
1725           + sum(i,V_Lossi_start(i))
1726           + V_previous_solution_penalty_start;
1727   
1728  * compute variable bound violations
1729      gen_p_lo_viol_start(gen)$status(gen) =
1730          max(0, pmin(gen) - v_p_start(gen));
1731      gen_p_up_viol_start(gen)$status(gen) =
1732          max(0, v_p_start(gen) - pmax(gen));
1733      gen_q_lo_viol_start(gen)$status(gen) =
1734          max(0, qmin(gen) - v_q_start(gen));
1735      gen_q_up_viol_start(gen)$status(gen) =
1736          max(0, v_q_start(gen) - qmax(gen));
1737      De_response_Inc_P_up_viol_start(bus)$(Pd_respon_location(bus)) =
1738          max(0, de_response_inc_p_start(bus) - Pd_respon_p_up(bus));
1739      De_response_dec_P_lo_viol_start(bus)$(Pd_respon_location(bus)) =
1740          max(0, Pd_respon_p_down(bus) - de_response_dec_p_start(bus));
1741      v_shunt_up_viol_start(bus,bus_s)$numbswitched(bus,bus_s) =
1742          max(0, v_shunt_start(bus,bus_s) - numbswitched(bus,bus_s));
1743   
1744  * compute constraint violations
1745      balance_p_viol_start(i)$(type(i) ne 4) =
1746            sum(gen$(atBus(gen,i) and status(gen)), V_P_start(gen))
1747          - Pd(i)
1748          - De_response_Inc_P_start(i)$Pd_respon_location(i)
1749          - De_response_Dec_P_start(i)$Pd_respon_location(i)
1750          + P_S_start(i)$sum(solarbus,solarlocation(solarbus,i))
1751          - Solar_p_curtail_start(i)$contro_solar_location(i)
1752          - V_real_start(i) *
1753            (  sum((j,c)$(branchstatus(i,j,c)), V_LineIr_start(i,j,c))
1754             + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr_start(i,j,c)) )
1755          - V_imag_start(i) *
1756            (  sum((j,c)$(branchstatus(i,j,c) ), V_LineIq_start(i,j,c))
1757             + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq_start(i,j,c)))
1758          - Gs(i) * (sqr(V_real_start(i)) + sqr(V_imag_start(i)));
1759      balance_q_viol_start(i)$(type(i) ne 4) =
1760            sum(gen$(atBus(gen,i) and status(gen)), V_Q_start(gen))
1761          - Qd(i)
1762          - Pd_respon_q_up(i)*De_response_Inc_P_start(i)$Pd_respon_location(i)
1763          - Pd_respon_q_down(i)*De_response_Dec_P_start(i)$Pd_respon_location(i)
1764          + Q_S_start(i)$sum(solarbus,solarlocation(solarbus,i))
1765          + V_real_start(i) *
1766            (  sum((j,c)$(branchstatus(i,j,c) ), V_LineIq_start(i,j,c))
1767             + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIq_start(i,j,c)))
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 34
compute_start_metrics
C o m p i l a t i o n


1768          - V_imag_start(i) *
1769            (  sum((j,c)$(branchstatus(i,j,c) ), V_LineIr_start(i,j,c))
1770             + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  ), V_LineIr_start(i,j,c)))
1771          + (Bs(i) + V_switchedShuntB_start(i)$sum(bus_s$numBswitched(i,bus_s), 1)) * (sqr(V_real_start(i)) + sqr(V_imag_start(i)));
1772      p_generator_add_viol_start(gen)$(status(gen) eq 1) =
1773            V_P_start(gen)
1774          - PgSch(gen)
1775          - gen_participation_factor(gen) * V_P_system_deviation_start;
1776      c_I_limit_viol_start(i,j,c)$(branchstatus(i,j,c) or branchstatus(j,i,c)) =
1777  *        max(0,  sqrt(sqr(V_LineIr_start(i,j,c)) + sqr(V_LineIq_start(i,j,c)))
1778  *              - currentrate(i,j,c));
1779  0;
1780  * NOTE: currentrate apparently is not defined and we are not enforcing this constraint
1781      c_V_limit_lo_viol_start(i) =
1782          max(0, minVm(i) - sqrt(sqr(V_real_start(i)) + sqr(V_imag_start(i))));
1783      c_V_limit_up_viol_start(i) =
1784          max(0, sqrt(sqr(V_real_start(i)) + sqr(V_imag_start(i))) - maxVm(i));
1785      v_generator_hardupl_viol_start(i) =
1786          max(0, sqrt(sqr(V_real_start(i)) + sqr(V_imag_start(i))) - 1.15);
1787      v_generator_harddownl_viol_start(i) =
1788          max(0, 0.88 - sqrt(sqr(V_real_start(i)) + sqr(V_imag_start(i))));
1789      v_under_q_up_slack_viol_start(gen)$status(gen) =
1790          sum(i$atbus(gen,i),
1791              min(max(0, vsch(i) - sqrt(sqr(v_real_start(i)) + sqr(v_imag_start(i)))),
1792                  max(0, qmax(gen) - v_q_start(gen))));
1793      v_over_q_lo_slack_viol_start(gen)$status(gen) =
1794          sum(i$atbus(gen,i),
1795              min(max(0, sqrt(sqr(v_real_start(i)) + sqr(v_imag_start(i))) - vsch(i)),
1796                  max(0, v_q_start(gen) - qmin(gen))));
1797   
1798  * compute summaries
1799      p_load_start = sum(i, pd(i));
1800      p_gen_start = sum(gen$status(gen), V_P_start(gen));
1801      p_shunt_start = sum(i, Gs(i) * (sqr(V_real_start(i)) + sqr(V_imag_start(i))));
1802      p_solar_start
1803        = sum(i$sum(solarbus,solarlocation(solarbus,i)), P_S_start(i))
1804        - sum(i$contro_solar_location(i), Solar_p_curtail_start(i));
1805      p_dr_start
1806        = sum(i$Pd_respon_location(i), De_response_Inc_P_start(i))
1807        + sum(i$Pd_respon_location(i), De_response_Dec_P_start(i));
1808      p_imbalance_start
1809        = p_gen_start
1810        - p_load_start
1811        - p_shunt_start
1812        + p_solar_start
1813        - p_dr_start;
1814      sum_loss_start = sum(i,v_lossi_start(i));
1815  *    v_load_bus_volt_pen_start
1816  *    v_totalshuntswitching_start
1817  *    v_shuntswitchingtotalpenalty_start
1818  *    v_previous_solution_penalty_start
1819  *    v_objcost_start
1820      max_gen_p_lo_viol_start = smax(gen$status(gen), gen_p_lo_viol_start(gen));
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 35
compute_start_metrics
C o m p i l a t i o n


1821      max_gen_p_up_viol_start = smax(gen$status(gen), gen_p_up_viol_start(gen));
1822      max_gen_q_lo_viol_start = smax(gen$status(gen), gen_q_lo_viol_start(gen));
1823      max_gen_q_up_viol_start = smax(gen$status(gen), gen_q_up_viol_start(gen));
1824      max_De_response_Inc_P_up_viol_start = smax(bus$Pd_respon_location(bus), de_response_inc_p_up_viol_start(bus));
1825      max_De_response_dec_P_lo_viol_start = smax(bus$Pd_respon_location(bus), de_response_dec_p_lo_viol_start(bus));
1826      max_v_shunt_up_viol_start = smax((bus,bus_s)$numbswitched(bus,bus_s), v_shunt_up_viol_start(bus,bus_s));
1827      max_balance_p_viol_start = smax(i$(type(i) ne 4), abs(balance_p_viol_start(i)));
1828      max_balance_q_viol_start = smax(i$(type(i) ne 4), abs(balance_q_viol_start(i)));
1829      max_p_generator_add_viol_start = smax(gen$(status(gen) eq 1), abs(p_generator_add_viol_start(gen)));
1830      max_c_I_limit_viol_start = smax((i,j,c)$(branchstatus(i,j,c) or branchstatus(j,i,c)), c_i_limit_viol_start(i,j,c));
1831      max_c_V_limit_lo_viol_start = smax(i, c_v_limit_lo_viol_start(i));
1832      max_c_V_limit_up_viol_start = smax(i, c_v_limit_up_viol_start(i));
1833      max_v_generator_hardupl_viol_start = smax(i, v_generator_hardupl_viol_start(i));
1834      max_v_generator_harddownl_viol_start = smax(i, v_generator_harddownl_viol_start(i));
1835      max_v_under_q_up_slack_viol_start = smax(gen$status(gen), v_under_q_up_slack_viol_start(gen));
1836      max_v_over_q_lo_slack_viol_start = smax(gen$status(gen), v_over_q_lo_slack_viol_start(gen));
1837   
1838  *===== SECTION: DISPLAY START METRICS
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/display_start.gms
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 36
display_start
C o m p i l a t i o n


      Display variable values, constraint violations, bound violations, penalties, objectives, and summaries at the start point
1844   
1845  display
1846      "display start"
1847  * data
1848      Pd
1849      Qd
1850  * control variables
1851      V_P_start
1852      V_Q_start
1853      P_S_start
1854      Q_S_start
1855      V_real_start
1856      V_imag_start
1857      Solar_p_curtail_start
1858      De_response_Dec_P_start
1859      De_response_Inc_P_start
1860      V_switchedshuntB_start
1861      V_shunt_start
1862      V_P_system_deviation_start
1863  * current
1864      V_LineIr_start
1865      V_LineIq_start
1866  * losses
1867      V_Lossijc_start
1868      V_Lossi_start
1869  * penalties and objectives
1870      V_load_bus_volt_pen_dev_start
1871      V_load_bus_volt_pen_start
1872      V_shuntSwitching_start
1873      V_totalShuntSwitching_start
1874      V_shuntSwitchingPenalty_start
1875      V_shuntTotalSwitchingPenalty_start
1876      V_shuntSwitchingTotalPenalty_start
1877      V_previous_solution_penalty_start
1878      V_objcost_start
1879  * variable bound violations
1880      gen_p_lo_viol_start
1881      gen_p_up_viol_start
1882      gen_q_lo_viol_start
1883      gen_q_up_viol_start
1884      De_response_Inc_P_up_viol_start
1885      De_response_dec_P_lo_viol_start
1886      v_shunt_up_viol_start
1887  * constraint violations
1888      balance_p_viol_start
1889      balance_q_viol_start
1890      p_generator_add_viol_start
1891      c_I_limit_viol_start
1892      c_V_limit_lo_viol_start
1893      c_V_limit_up_viol_start
1894      v_generator_hardupl_viol_start
1895      v_generator_harddownl_viol_start
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 37
display_start
C o m p i l a t i o n


1896      v_under_q_up_slack_viol_start
1897      v_over_q_lo_slack_viol_start
1898  * summaries
1899      "display start summary"
1900      p_load_start
1901      p_gen_start
1902      p_shunt_start
1903      sum_loss_start
1904      v_load_bus_volt_pen_start
1905      v_totalshuntswitching_start
1906      v_shuntswitchingtotalpenalty_start
1907      v_previous_solution_penalty_start
1908      v_objcost_start
1909      max_gen_p_lo_viol_start
1910      max_gen_p_up_viol_start
1911      max_gen_q_lo_viol_start
1912      max_gen_q_up_viol_start
1913      max_De_response_Inc_P_up_viol_start
1914      max_De_response_dec_P_lo_viol_start
1915      max_v_shunt_up_viol_start
1916      max_balance_p_viol_start
1917      max_balance_q_viol_start
1918      max_p_generator_add_viol_start
1919      max_c_I_limit_viol_start
1920      max_c_V_limit_lo_viol_start
1921      max_c_V_limit_up_viol_start
1922      max_v_generator_hardupl_viol_start
1923      max_v_generator_harddownl_viol_start
1924      max_v_under_q_up_slack_viol_start
1925      max_v_over_q_lo_slack_viol_start;
1926   
1928   
1929  put report_file;
1930  report_file.ap = 1;
1931  put
1932      'start point summary' /
1933      'p_load'
1934      p_load_start /
1935      'p_gen'
1936      p_gen_start /
1937      'p_shunt'
1938      p_shunt_start /
1939      'p_solar'
1940      p_solar_start /
1941      'p_dr'
1942      p_dr_start /
1943      'p_imbalance'
1944      p_imbalance_start /
1945      'sum_loss'
1946      sum_loss_start /
1947      'v_load_bus_volt_pen'
1948      v_load_bus_volt_pen_start /
1949      'v_totalshuntswitching'
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 38
display_start
C o m p i l a t i o n


1950      v_totalshuntswitching_start /
1951      'v_shuntswitchingtotalpenalty'
1952      v_shuntswitchingtotalpenalty_start /
1953      'v_previous_solution_penalty'
1954      v_previous_solution_penalty_start /
1955      'v_objcost'
1956      v_objcost_start /
1957      'max_gen_p_lo_viol'
1958      max_gen_p_lo_viol_start /
1959      'max_gen_p_up_viol'
1960      max_gen_p_up_viol_start /
1961      'max_gen_q_lo_viol'
1962      max_gen_q_lo_viol_start /
1963      'max_gen_q_up_viol'
1964      max_gen_q_up_viol_start /
1965      'max_De_response_Inc_P_up_viol'
1966      max_De_response_Inc_P_up_viol_start /
1967      'max_De_response_dec_P_lo_viol'
1968      max_De_response_dec_P_lo_viol_start /
1969      'max_v_shunt_up_viol'
1970      max_v_shunt_up_viol_start /
1971      'max_balance_p_viol'
1972      max_balance_p_viol_start /
1973      'max_balance_q_viol'
1974      max_balance_q_viol_start /
1975      'max_p_generator_add_viol'
1976      max_p_generator_add_viol_start /
1977      'max_c_I_limit_viol'
1978      max_c_I_limit_viol_start /
1979      'max_c_V_limit_lo_viol'
1980      max_c_V_limit_lo_viol_start /
1981      'max_c_V_limit_up_viol'
1982      max_c_V_limit_up_viol_start /
1983      'max_v_generator_hardupl_viol'
1984      max_v_generator_hardupl_viol_start /
1985      'max_v_generator_harddownl_viol'
1986      max_v_generator_harddownl_viol_start /
1987      'max_v_under_q_up_slack_viol'
1988      max_v_under_q_up_slack_viol_start /
1989      'max_v_over_q_lo_slack_viol'
1990      max_v_over_q_lo_slack_viol_start /;
1991  putclose;
1992   
1993  *===== SECTION: MODEL OPTIONS AND SOLVE
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solve_procedure.gms
1996   
1997  *nlpfile knitroset.opt
1998  option  nlp = KNITRO;
1999  option  rminlp = KNITRO;
2000  option  minlp = knitro;
2001  option SysOut = On;
2002  *feastol =1e-7
2003   
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 39
display_start
C o m p i l a t i o n


2020   
2037   
2038  acopf.optfile=1;
2039  acopf.optca = 0;
2040  *acopf.optcr = 1e-8;
2041  acopf.reslim = 60;
2042  acopf.holdfixed = 1;
2043  acopf_check.optfile=1;
2044  acopf_check.optca = 0;
2045  *acopf_check.optcr = 1e-8;
2046  acopf_check.reslim = 60;
2047  acopf_check.holdfixed = 1;
2048   
      * TODO JH remove this solve
      * initial solve with penalty model
      * we seem to have significant difficulty solving a minlp problem,
      * at some time steps, even if we provide a feasible solution.
      * this is a problem with the knitro solver.
      *display "foo", numShuntStepsOn_init;
      V_shunt.l(bus,bus_s)$numBswitched(bus,bus_s) = numShuntStepsOn_init(bus,bus_s);
      solve acopf_check min V_objcosttest using rminlp;
      V_shunt.fx(bus,bus_s)$numBswitched(bus,bus_s) = round(V_shunt.l(bus,bus_s));
      solve acopf_check min V_objcosttest using rminlp;
      *solve acopf_check min V_objcosttest using minlp;
      V_shunt.lo(bus,bus_s)$numBswitched(bus,bus_s) = 0;
      V_shunt.up(bus,bus_s)$numBswitched(bus,bus_s) = numBswitched(bus,bus_s);
      *solve acopf_check min V_objcosttest using minlp;
      * PHASE 3:
      * set voltage penalty parameters to 0
      * fix voltage magnitude deviations to 0 for buses already achieving 0 deviation
      * fix reactive power (to what value?) for buses with nonzero deviation
      *   specifically,
      *     if deviation > 0 fix q to qlo
      *     if deviation < 0 fix q to qup
      *   what if deviation is nonzero but q is not at a bound already?
      *   this procedure risks infeasibility. Instead we could do:
      *     if deviation <> fix q to q.l
      *   or
      *     if deviation > 0 require q <= q.l
      *     if deviation < 0 require q >= q.l
      parameter
          sstat "final solver status"
          mstat "final model status"
          infeas "Number of infeasibilities from model solve"
          sumInf "SUM OF infeasibility";
      sstat=acopf_check.solvestat;
      mstat=acopf_check.modelstat;
      infeas = acopf_check.numInfes;
      sumInf = acopf_check.sumInfes;
2087   
2088  * TODO JH - feasibility problems with these solves
2089  * need to fix this
2090  *$ontext
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 40
display_start
C o m p i l a t i o n


2091   
2092  *==== SECTION: Solution Analysis
2093  * See if model is solved
2094  parameter
2095      sstat "final solver status"
2096      mstat "final model status"
2097      infeas "Number of infeasibilities from model solve"
2098      sumInf "SUM OF infeasibility";
2099   
2100  * for test to evaluate quality of start point
2101  * remove these lines for a real run
2102  *option rminlp=examiner;
2103  *solve acopf min V_objcost using rminlp;
2104  *$exit
2105   
2106  *** solve the model (phase 1)
2107  solve acopf min V_objcost using rminlp;
2108  **$exit
2109  **OPTION NLP=GAMSCHK;
2110  **solve acopf min V_objcost using rminlp;
2111  *
2112  *
2113  *
2114  infeas = acopf.numInfes;
2115  sumInf = acopf.sumInfes;
2116  sstat=acopf.solvestat;
2117  mstat=acopf.modelstat;
2118  *display infeas,sumInf;
2119   
2120  if(infeas ne 0,
2121  *        solve phase 2
2122  *        what is the best shunt starting point?
2123  *        does it matter?
2124           display  V_shunt.l;
2125           V_shunt.l(bus,bus_s)$numBswitched(bus,bus_s) = numShuntStepsOn_init(bus,bus_s);
2126           solve acopf_check min V_objcosttest using rminlp;
2127  *         if(acopf_check.modelstat ne 2 or acopf_check.modelstat ne 7,
2128  *            abort "failed to solve acopf_check with relaxed shunt settings";);
2130           display  V_shunt.l;
2131  *         if(acopf_check.modelstat ne 2 or acopf_check.modelstat ne 7,
2132  *            abort "failed to solve scopf_check after fixing shunts";);
2133           infeas = acopf_check.numInfes;
2134           sstat=acopf_check.solvestat;
2135           mstat=acopf_check.modelstat;
2136           saturaup(i)=V_artup.l(i);
2137           saturalow(i)=V_artlow.l(i);
2138  *        solve phase 3
2139           V_Q.fx(gen)$((sum(bus$atBus(gen,bus),saturaup(bus)) ne 0) or (sum(bus$atBus(gen,bus),saturalow(bus)) ne 0)) =V_Q.l(gen);
2140  *        V_Q.fx(gen)$(genQtemp(gen) ne 0 )=genQtemp(gen);
2141  *         acopf.optfile=2;
2142           solve acopf min V_objcost using rminlp;
2143  *         if(acopf.modelstat ne 2,
2144  *            abort "failed to solve acopf after fixing V at saturated buses";);
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 41
display_start
C o m p i l a t i o n


2145           infeas = acopf.numInfes;
2146           sstat=acopf.solvestat;
2147           mstat=acopf.modelstat;
2148  *        solve acopf_resolve min V_objcosttest using rminlp;
2149  );
2150   
2151  *$batinclude "%filepath%objective_voltage_stability_addterm.gms" obj demandbids
2152   
2153  * TODO - need to fix above solves
2154  *$offtext
2155   
2156  *while((infeas ne 0),
2157  *   voltageran_low=voltageran_low-step_leng;
2158  *   voltageran_high=voltageran_high+step_leng;
2159  *   display voltageran_low,voltageran_high;
2160  *   solve acopf min V_objcost using minlp;
2161  *);
2163   
2164   
2165   
2166  *===== SECTION: SOLUTION ANALYSIS
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solution_analysis.gms
2168   
2169  * Declaration needs to be made outside loop
2170  set
2171      lines_at_limit(i,j,c) "lines at their bound"
2172  ;
2173  parameters
2174      total_cost "Cost of objective function"
2175      LMP(bus) "Locational marginal price"
2176      LineSP(i,j,c) "Marginal price of active power on line (i,j,c)"
2177      shuntB(i)
2178      TotalLoss         " Total Loss of all the lines"
2179      TotalSwitches "number of shunt switches used"
2180      RMSVoltageDeviation "root mean square of load bus voltage deviations"
2181      AverageLoadBusVoltageDeviation "average of load bus voltage deviations"
2182      VoltageDevNongen(bus) "voltage deviation in percentage"
2183      vmgen(gen) "generator voltage magnitude"
2184      vmgenBus(bus) "generator voltage magnitude at bus, consider multiple gen at same bus"
2185      vmnongen(bus) "nongenerator voltage magnitude"
2186      Totalvgendev "total gen voltage deviation from schedule"
2187      Totalvnongendev "total nongen voltage deviation from schedule"
2188      genbusid(gen)
2189      solarQupperlimit(bus)
2190      solarQlowerlimit(bus)
2191  ;
2192   
2193      TotalLoss=sum(i,V_Lossi.l(i));
2194  *     TotalLoss=0;
2195      TotalSwitches = sum((i,bus_s)$numBswitched(i,bus_s),abs(V_shunt.l(i,bus_s) - numShuntStepsOn_init(i,bus_s)));
2196  *    RMSVoltageDeviation=sqrt(sum(bus$load(bus), sqr(load_bus_voltage_goal - sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus))))) / max(sum(bus$load(bus),1),1));
2197      AverageLoadBusVoltageDeviation = sum(bus$load(bus), abs(load_bus_voltage_goal - sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus))))) / max(sum(bus$load(bus),1),1);
2198      VoltageDevNongen(bus)$(bus_penalize_volt_mag_target(bus) and type(bus) eq 1)=  load_bus_voltage_goal - sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus)));
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 42
display_start
C o m p i l a t i o n


2199  *calculate the total voltage deviation of generator bus and nongenerator bus
2200      Totalvnongendev= sum(bus$load(bus), abs(load_bus_voltage_goal - sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus)))));
2201      Totalvgendev= sum(bus$isGen(bus), abs(Vsch(bus) - sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus)))));
2202   
2203   
2204   
2205   
2206  *    Totalvgendev
2207   
2208   
2209  display  TotalLoss, infeas;
2210   
2211  ** switched shunt solution values
2212  parameter
2213    numShuntStepsOn_final(bus,bus_s)
2214    switched_shunt_susceptance_final(bus,bus_s);
2215  set
2216    switched_shunt_susceptance_keys(bus,bus_s);
2217  switched_shunt_susceptance_keys(bus,bus_s) = yes$numBswitched(bus,bus_s);
2218  numShuntStepsOn_final(i,bus_s)$numBswitched(i,bus_s) = V_shunt.l(i,bus_s);
2219  switched_shunt_susceptance_final(bus,bus_s)$numBswitched(bus,bus_s) = V_shunt.l(bus,bus_s) * Bswitched(bus,bus_s);
2220  execute_unload 'switched_shunt_current.gdx', numShuntStepsOn_final=numShuntStepsOn;
2221  *display switched_shunt_susceptance_keys;
2222  if(infeas eq 0,
2223  * Final Objective function value
2224      total_cost = V_objcost.l;
2225  * Generator real power solution
2226      Pg(gen) = V_P.l(gen);
2227  * Generator reactive power solution
2228      Qg(gen) = V_Q.l(gen);
2229  * Voltage magnitude solution
2230      Vm(bus) = sqrt(sqr(V_real.l(bus)) + sqr(V_imag.l(bus)));
2231      vmgen(gen) =sum(bus$(atBus(gen,bus)), Vm(bus));
2232      vmgenBus(bus)$(sum(gen,atBus(gen,bus)) > 0)= Vm(bus);
2233      vmnongen(bus)=Vm(bus)$(load(bus))
2234      display Vm;
2235  * Voltage angle solution
2236  *    Va(bus) = arctan2(V_imag.l(bus),V_real.l(bus)) * 180 / pi;
2237      loop(bus,
2238      if(V_real.l(bus) > 0,
2239          Va(bus) = arctan(V_imag.l(bus)/V_real.l(bus)) * 180/pi;
2240      else
2241          Va(bus) = arctan(V_imag.l(bus)/V_real.l(bus)) * 180/pi + 180;
2242      );
2243      );
2244  * Bus shunt solution
2245      shuntB(i) = sum(bus_s$numBswitched(i,bus_s), V_shunt.l(i,bus_s)*Bswitched(i,bus_s));
2246  * Locational marginal price of bus at time t
2247  *    LMP(bus) = c_BalanceP_nosolar.m(bus);
2248   
2249  * Marginal for active power on a line
2250  *    LineSP(i,j,c)$branchstatus(i,j,c) = c_I_Limit.m(i,j,c);
2251  *    LineSP(j,i,c)$branchstatus(i,j,c) = c_I_Limit.m(j,i,c);
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 43
display_start
C o m p i l a t i o n


2252   
2253  * Find which lines are at their limits
2254  *lines_at_limit(i,j,c)$(branchstatus(i,j,c) or branchstatus(j,i,c)) = yes$
2255  *     (sqr(currentrate(i,j,c)) - sqr(V_LineIr.L(i,j,c)) - sqr(V_LineIq.L(i,j,c)) le 1e-4);
2256  *display lines_at_limit;
2257   
2258  *==== SECTION: SOLUTION SAVE
INCLUDE    /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solution_save.gms
2260  *file filename;
2261  *put_utility filename 'Exec' / 'results_' i.tl:0 '.gdx';
2262   
2263   
2264   
2265   
2266   
2267   
2268  *put_utilities  'gdxout' / 'out' Nb:0:0;
2269   
2271  );
2272   
2273  display Pmax, Pmin,ratio,switchedShuntB_init, V_dem_Load.l, V_switchedshuntB.l,V_P.l,V_P.up, V_P.lo, V_Q.l, V_Q.up, V_Q.lo, Qmax, Qmin;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME nongen OF TYPE SET  
**** STRAY NAME fuel_t OF TYPE SET  
**** STRAY NAME fuel_s OF TYPE SET  
**** STRAY NAME prime_mover OF TYPE SET  
**** STRAY NAME gen_s OF TYPE SET  
**** STRAY NAME interface_t OF TYPE SET  
**** STRAY NAME Nb OF TYPE PARAM
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 44
display_start
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/iv_acopf_reformulation_lop_adj.gms
     2      147 BATINCLUDE     1     151  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/extract_data_SunLamp_newformulation_cle.gms
     3      205 GDXIN          2      58  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/7bus.gdx
     4      221 GDXIN          2      74  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solarbus2.gdx
     5      308 GDXIN          2     165  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/geni_st.gdx
     6      312 GDXIN          2     169  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demand_response.gdx
     7      316 GDXIN          2     173  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demandresponseload.gdx
     8      320 GDXIN          2     177  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/demandresponseprice.gdx
     9      365 GDXIN          2     243  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solarlocation.gdx
    10      410 GDXIN          2     288  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/UC_OPF_load_elwi_BV.gdx
    11      448 GDXIN          2     326  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/geni_p.gdx
    12      464 GDXIN          2     342  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/UC_OPF_load_elwi_Q.gdx
    13      527 IF EXIST       1     153  /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/switched_shunt_current.gdx
    14      530 INCLUDE        1     158  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/params_from_user.gms
    15      561 INCLUDE        1     161  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/model_params.gms
    16      793 INCLUDE        1     164  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/data_manipulation.gms
    17      800 IF EXIST      16       7  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/switched_shunt_current.gdx
    18      848 INCLUDE        1     167  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/var_declaration.gms
    19      908 INCLUDE        1     170  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/eqn_declaration.gms
    20      955 INCLUDE        1     173  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/eqn_definition.gms
    21     1346 INCLUDE        1     176  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/mod_definition.gms
    22     1401 INCLUDE        1     179  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/var_bounds.gms
    23     1485 INCLUDE        1     182  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/start_point.gms
    24     1488 BATINCLUDE    23       3  ../home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/preset.gms
    25     1507 BATINCLUDE    23      12  ../home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/given.gms
    26     1530 INCLUDE       25      23  .../home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/ic_iv/calc_derived_vars.gms
    27     1658 INCLUDE        1     184  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/compute_start_metrics.gms
    28     1839 INCLUDE        1     187  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/display_start.gms
    29     1995 INCLUDE        1     193  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solve_procedure.gms
    30     2167 INCLUDE        1     199  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solution_analysis.gms
    31     2259 INCLUDE        1     202  ./home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/solution_save.gms


COMPILATION TIME     =        0.010 SECONDS      3 MB  24.9.1 r63795 LEX-LEG
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 45
display_start
E x e c u t i o n


----    319 PARAMETER demLoad  demandresponse load

2 0.001,    3 0.002,    4 0.003,    5 0.004


----    328 PARAMETER demLoad  demandresponse load

2 2.078832E-4,    3 4.157664E-4,    4 6.236496E-4,    5 8.315328E-4


----    328 PARAMETER demPrice  demandresponse price

2 0.042,    3 0.085,    4 0.127,    5 0.170


----    328 PARAMETER demLocation  location of demand response

18 1.000


----    328 PARAMETER demSlope  slope

2 203.850,    3 203.850,    4 203.850,    5 203.850


----    808 PARAMETER Bswitched  susceptance of switched shunts

                      ( ALL       0.000 )


----   1399 PARAMETER Pmax  gen maximum real power output

1 1.089


----   1399 PARAMETER Pmin  gen minimum real power output

1 0.206


----   1399 PARAMETER Pd  bus real power demand

7  0.121,    18 0.132,    57 0.198


----   1399 PARAMETER Va  bus voltage angle

                      ( ALL       0.000 )

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 46
display_start
E x e c u t i o n


----   1399 PARAMETER Vm  bus voltage magnitude

7   1.000,    13  1.000,    18  1.000,    149 1.000,    54  1.000,    57  1.000,    56  1.000


----   1399 PARAMETER Qg  gen reactive power output

1 0.085


----   1399 PARAMETER Gs  bus shunt conductance

                      ( ALL       0.000 )


----   1399 PARAMETER B  line susceptance

                  1

7  .13      -46.943
7  .149     -33.624
13 .7       -46.943
13 .18      -28.548
13 .54      -72.445
18 .13      -28.548
149.7       -33.624
54 .13      -72.445
54 .57      -67.110
54 .56      -46.943
57 .54      -67.110
56 .54      -46.943


----   1399 PARAMETER bc  line charging susceptance

                  1

7  .13  1.891335E-7
7  .149 2.647869E-7
13 .7   1.891335E-7
13 .18  3.120704E-7
13 .54  1.229368E-7
18 .13  3.120704E-7
149.7   2.647869E-7
54 .13  1.229368E-7
54 .57  1.323935E-7
54 .56  1.891335E-7
57 .54  1.323935E-7
56 .54  1.891335E-7

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 47
display_start
E x e c u t i o n


----   1654 VARIABLE V_real.L  Real part of bus voltage

7   1.000,    13  1.000,    18  1.000,    149 1.000,    54  1.000,    57  1.000,    56  1.000


----   1654 VARIABLE V_imag.L  Imaginary part of bus voltage

                      ( ALL       0.000 )


----   1654 PARAMETER Vm  bus voltage magnitude

7   1.000,    13  1.000,    18  1.000,    149 1.000,    54  1.000,    57  1.000,    56  1.000


----   1846 display start

----   1846 PARAMETER Pd  bus real power demand

7  0.121,    18 0.132,    57 0.198


----   1846 PARAMETER Qd  bus reactive power demand

7  0.036,    18 0.034,    57 0.061


----   1846 PARAMETER V_P_start  

1 0.429


----   1846 PARAMETER V_Q_start  

1 0.085


----   1846 PARAMETER P_S_start  

                      ( ALL       0.000 )


----   1846 PARAMETER Q_S_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_real_start  

7   1.000,    13  1.000,    18  1.000,    149 1.000,    54  1.000,    57  1.000,    56  1.000

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 48
display_start
E x e c u t i o n


----   1846 PARAMETER V_imag_start  

                      ( ALL       0.000 )


----   1846 PARAMETER Solar_p_curtail_start  

                      ( ALL       0.000 )


----   1846 PARAMETER De_response_Dec_P_start  

                      ( ALL       0.000 )


----   1846 PARAMETER De_response_Inc_P_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_switchedshuntB_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_shunt_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_P_system_deviation_start =        0.000  

----   1846 PARAMETER V_LineIr_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_LineIq_start  

                  1

7  .13  9.456675E-8
7  .149 1.323935E-7
13 .7   9.456675E-8
13 .18  1.560352E-7
13 .54  6.146840E-8
18 .13  1.560352E-7
149.7   1.323935E-7
54 .13  6.146840E-8
54 .57  6.619675E-8
54 .56  9.456675E-8
57 .54  6.619675E-8
56 .54  9.456675E-8
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 49
display_start
E x e c u t i o n


----   1846 PARAMETER V_Lossijc_start  

                 1

7  .13 7.51201E-17
13 .18 3.35988E-16
13 .54 2.04032E-17
149.7  2.05499E-16
54 .57 2.58539E-17
54 .56 7.51201E-17


----   1846 PARAMETER V_Lossi_start  

7   7.51201E-17,    13  3.56392E-16,    149 2.05499E-16,    54  1.00974E-16


----   1846 PARAMETER V_load_bus_volt_pen_dev_start  

7  0.010,    18 0.010,    57 0.010


----   1846 PARAMETER V_load_bus_volt_pen_start =        0.030  

----   1846 PARAMETER V_shuntSwitching_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_totalShuntSwitching_start =        0.000  

----   1846 PARAMETER V_shuntSwitchingPenalty_start  

                      ( ALL       0.000 )


----   1846 PARAMETER V_shuntTotalSwitchingPenalty_start =        0.000  
            PARAMETER V_shuntSwitchingTotalPenalty_start =        0.000  
            PARAMETER V_previous_solution_penalty_start =        0.000  
            PARAMETER V_objcost_start      =        0.030  

----   1846 PARAMETER gen_p_lo_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER gen_p_up_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER gen_q_lo_viol_start  

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 50
display_start
E x e c u t i o n


                      ( ALL       0.000 )


----   1846 PARAMETER gen_q_up_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER De_response_Inc_P_up_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER De_response_dec_P_lo_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER v_shunt_up_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER balance_p_viol_start  

7   -0.121,    18  -0.132,    149  0.429,    57  -0.198


----   1846 PARAMETER balance_q_viol_start  

7        -0.036,    13  3.120703E-7,    18       -0.034,    149       0.085,    54  2.222319E-7,    57       -0.061,    56  9.456675E-8


----   1846 PARAMETER p_generator_add_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER c_I_limit_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER c_V_limit_lo_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER c_V_limit_up_viol_start  

                      ( ALL       0.000 )

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 51
display_start
E x e c u t i o n


----   1846 PARAMETER v_generator_hardupl_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER v_generator_harddownl_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER v_under_q_up_slack_viol_start  

                      ( ALL       0.000 )


----   1846 PARAMETER v_over_q_lo_slack_viol_start  

                      ( ALL       0.000 )


----   1846 display start summary
            PARAMETER p_load_start         =        0.451  
            PARAMETER p_gen_start          =        0.429  
            PARAMETER p_shunt_start        =        0.000  
            PARAMETER sum_loss_start       =  7.37984E-16  
            PARAMETER V_load_bus_volt_pen_start =        0.030  
            PARAMETER V_totalShuntSwitching_start =        0.000  
            PARAMETER V_shuntSwitchingTotalPenalty_start =        0.000  
            PARAMETER V_previous_solution_penalty_start =        0.000  
            PARAMETER V_objcost_start      =        0.030  
            PARAMETER max_gen_p_lo_viol_start =        0.000  
            PARAMETER max_gen_p_up_viol_start =        0.000  
            PARAMETER max_gen_q_lo_viol_start =        0.000  
            PARAMETER max_gen_q_up_viol_start =        0.000  
            PARAMETER max_De_response_Inc_P_up_viol_start =         -INF  
            PARAMETER max_De_response_dec_P_lo_viol_start =         -INF  
            PARAMETER max_v_shunt_up_viol_start =         -INF  
            PARAMETER max_balance_p_viol_start =        0.429  
            PARAMETER max_balance_q_viol_start =        0.085  
            PARAMETER max_p_generator_add_viol_start =        0.000  
            PARAMETER max_c_I_limit_viol_start =        0.000  
            PARAMETER max_c_V_limit_lo_viol_start =        0.000  
            PARAMETER max_c_V_limit_up_viol_start =        0.000  
            PARAMETER max_v_generator_hardupl_viol_start =        0.000  
            PARAMETER max_v_generator_harddownl_viol_start =        0.000  
            PARAMETER max_v_under_q_up_slack_viol_start =        0.000  
            PARAMETER max_v_over_q_lo_slack_viol_start =        0.000  

**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 52
display_start
E x e c u t i o n


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 53
display_start
E x e c u t i o n


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET


**** PUT ERROR FOR FILE report_file AT LINE 1931: NOT ENOUGH SPACE FOR E-FORMAT - RESET

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 54
display_start
Equation Listing    SOLVE acopf Using RMINLP From line 2107


---- c_LineIrij  =E=  Real current flowing from bus i into bus j along line c

c_LineIrij(7,13,1)..  - 22.9257641921397*V_real(7) + 22.9257641921397*V_real(13) - 46.9432313464813*V_imag(7) + 46.943231441048*V_imag(13) + V_LineIr(7,13,1) =E= 0 ; (LHS = 0)
     
c_LineIrij(13,18,1)..  - 13.9206924031352*V_real(13) + 13.9206924031352*V_real(18) - 28.5475067286551*V_imag(13) + 28.5475068846903*V_imag(18) + V_LineIr(13,18,1) =E= 0 ; (LHS = 0)
     
c_LineIrij(13,54,1)..  - 34.9288486416559*V_real(13) + 34.9288486416559*V_real(54) - 72.4450193434475*V_imag(13) + 72.4450194049159*V_imag(54) + V_LineIr(13,54,1) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- c_LineIrji  =E=  Real  current flowing from bus j into bus i along line c

c_LineIrji(7,13,1)..  22.9257641921397*V_real(7) - 22.9257641921397*V_real(13) + 46.943231441048*V_imag(7) - 46.9432313464813*V_imag(13) + V_LineIr(13,7,1) =E= 0 ; (LHS = 0)
     
c_LineIrji(13,18,1)..  13.9206924031352*V_real(13) - 13.9206924031352*V_real(18) + 28.5475068846903*V_imag(13) - 28.5475067286551*V_imag(18) + V_LineIr(18,13,1) =E= 0 ; (LHS = 0)
     
c_LineIrji(13,54,1)..  34.9288486416559*V_real(13) - 34.9288486416559*V_real(54) + 72.4450194049159*V_imag(13) - 72.4450193434475*V_imag(54) + V_LineIr(54,13,1) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- c_LineIqij  =E=  Reactive current  flowing from bus i into bus j along line c

c_LineIqij(7,13,1)..  46.9432313464813*V_real(7) - 46.943231441048*V_real(13) - 22.9257641921397*V_imag(7) + 22.9257641921397*V_imag(13) + V_LineIq(7,13,1) =E= 0 ; (LHS = 0)
     
c_LineIqij(13,18,1)..  28.5475067286551*V_real(13) - 28.5475068846903*V_real(18) - 13.9206924031352*V_imag(13) + 13.9206924031352*V_imag(18) + V_LineIq(13,18,1) =E= 0 ; (LHS = 0)
     
c_LineIqij(13,54,1)..  72.4450193434475*V_real(13) - 72.4450194049159*V_real(54) - 34.9288486416559*V_imag(13) + 34.9288486416559*V_imag(54) + V_LineIq(13,54,1) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- c_LineIqji  =E=  Reactive current flowing from bus j into bus i along line c

c_LineIqji(7,13,1)..  - 46.943231441048*V_real(7) + 46.9432313464813*V_real(13) + 22.9257641921397*V_imag(7) - 22.9257641921397*V_imag(13) + V_LineIq(13,7,1) =E= 0 ; (LHS = 0)
     
c_LineIqji(13,18,1)..  - 28.5475068846903*V_real(13) + 28.5475067286551*V_real(18) + 13.9206924031352*V_imag(13) - 13.9206924031352*V_imag(18) + V_LineIq(18,13,1) =E= 0 ; (LHS = 0)
     
c_LineIqji(13,54,1)..  - 72.4450194049159*V_real(13) + 72.4450193434475*V_real(54) + 34.9288486416559*V_imag(13) - 34.9288486416559*V_imag(54) + V_LineIq(54,13,1) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- c_BalanceP_nosolar  =E=  Balance of real power for bus without solar

c_BalanceP_nosolar(7)..  (0)*V_real(7) - (2.26960203519866E-7)*V_imag(7) - (1)*V_LineIr(7,13,1) - (1)*V_LineIr(7,149,1) + (0)*V_LineIq(7,13,1) + (0)*V_LineIq(7,149,1) =E= 0.1206679047262 ; (LHS = 0, INFES = 0.1206679047262 ****)
     
c_BalanceP_nosolar(18)..  (0)*V_real(18) - (1.56035198983773E-7)*V_imag(18) - (1)*V_LineIr(18,13,1) + (0)*V_LineIq(18,13,1) - V_dem_Load(2) - V_dem_Load(3) - V_dem_Load(4) - V_dem_Load(5) =E= 0.1321691763558 ; (LHS = 0, INFES = 0.1321691763558 ****)
     
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 55
display_start
Equation Listing    SOLVE acopf Using RMINLP From line 2107


     c_BalanceP_nosolar  =E=  Balance of real power for bus without solar

c_BalanceP_nosolar(149)..  V_P(1) + (0)*V_real(149) - (1)*V_LineIr(149,7,1) =E= 0 ; (LHS = 0.428843609632, INFES = 0.428843609632 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- c_BalanceP_solar  =E=  Balance of real power for bus with solar

c_BalanceP_solar(13)..  P_S(13) + (0)*V_real(13) - (3.12070348229554E-7)*V_imag(13) - (1)*V_LineIr(13,7,1) - (1)*V_LineIr(13,18,1) - (1)*V_LineIr(13,54,1) + (0)*V_LineIq(13,7,1) + (0)*V_LineIq(13,18,1) + (0)*V_LineIq(13,54,1) =E= 0 ;
     
      (LHS = 0.006, INFES = 0.006 ****)
     
c_BalanceP_solar(57)..  P_S(57) + (0)*V_real(57) - (6.61967476389691E-8)*V_imag(57) - (1)*V_LineIr(57,54,1) + (0)*V_LineIq(57,54,1) =E= 0.1979590282736 ; (LHS = 0.004, INFES = 0.1939590282736 ****)
     

---- c_BalanceQ_nosolar  =E=  Balance of reactive power for bus without solar

c_BalanceQ_nosolar(7)..  (2.26960203519866E-7)*V_real(7) + (0)*V_imag(7) + (0)*V_LineIr(7,13,1) + (0)*V_LineIr(7,149,1) + (1)*V_LineIq(7,13,1) + (1)*V_LineIq(7,149,1) =E= 0.0359438015336 ; (LHS = 2.26960203519866E-7, INFES = 0.0359435745733965 ****)
     
c_BalanceQ_nosolar(18)..  (1.56035198983773E-7)*V_real(18) + (0)*V_imag(18) + (0)*V_LineIr(18,13,1) + (1)*V_LineIq(18,13,1) =E= 0.0335226128616 ; (LHS = 1.56035198983773E-7, INFES = 0.033522456826401 ****)
     
c_BalanceQ_nosolar(149)..  V_Q(1) + (1.32393452645374E-7)*V_real(149) + (1)*V_LineIq(149,7,1) =E= 0 ; (LHS = 0.0852001323934526, INFES = 0.0852001323934526 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- c_BalanceQ_solar  =E=  Balance of reactive power for bus with solar

c_BalanceQ_solar(13)..  Q_S(13) + (3.12070348229554E-7)*V_real(13) + (0)*V_imag(13) + (0)*V_LineIr(13,7,1) + (0)*V_LineIr(13,18,1) + (0)*V_LineIr(13,54,1) + (1)*V_LineIq(13,7,1) + (1)*V_LineIq(13,18,1) + (1)*V_LineIq(13,54,1) =E= 0 ;
     
      (LHS = 3.12070348229554E-7, INFES = 3.12070348229554E-7 ****)
     
c_BalanceQ_solar(57)..  Q_S(57) + (6.61967476389691E-8)*V_real(57) + (0)*V_imag(57) + (0)*V_LineIr(57,54,1) + (1)*V_LineIq(57,54,1) =E= 0.061299852833 ; (LHS = 6.61967476389691E-8, INFES = 0.0612997866362524 ****)
     

---- c_Lossijc  =E=  Loss on line c connecting bus i and bus j

c_Lossijc(7,13,1)..  (0)*V_LineIr(7,13,1) - (1.58872141469146E-9)*V_LineIq(7,13,1) + V_Lossijc(7,13,1) =E= 0 ; (LHS = 0)
     
c_Lossijc(13,18,1)..  (0)*V_LineIr(13,18,1) - (4.30657149195213E-9)*V_LineIq(13,18,1) + V_Lossijc(13,18,1) =E= 0 ; (LHS = 0)
     
c_Lossijc(13,54,1)..  (0)*V_LineIr(13,54,1) - (6.63858702409925E-10)*V_LineIq(13,54,1) + V_Lossijc(13,54,1) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- c_Lossi  =E=  Loss on lines connected with bus i

c_Lossi(7)..  - V_Lossijc(7,13,1) + V_Lossi(7) =E= 0 ; (LHS = 0)
     
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 56
display_start
Equation Listing    SOLVE acopf Using RMINLP From line 2107


     c_Lossi  =E=  Loss on lines connected with bus i

c_Lossi(13)..  - V_Lossijc(13,18,1) - V_Lossijc(13,54,1) + V_Lossi(13) =E= 0 ; (LHS = 0)
     
c_Lossi(18)..  V_Lossi(18) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- v_generator_hardupl  =L=  bus voltage constraints upper bound

v_generator_hardupl(7)..  (1)*V_real(7) + (0)*V_imag(7) =L= 1.15 ; (LHS = 1)
     
v_generator_hardupl(13)..  (1)*V_real(13) + (0)*V_imag(13) =L= 1.15 ; (LHS = 1)
     
v_generator_hardupl(18)..  (1)*V_real(18) + (0)*V_imag(18) =L= 1.15 ; (LHS = 1)
     
REMAINING 4 ENTRIES SKIPPED


---- v_generator_harddownl  =G=  bus voltage constraints lower bound

v_generator_harddownl(7)..  (1)*V_real(7) + (0)*V_imag(7) =G= 0.88 ; (LHS = 1)
     
v_generator_harddownl(13)..  (1)*V_real(13) + (0)*V_imag(13) =G= 0.88 ; (LHS = 1)
     
v_generator_harddownl(18)..  (1)*V_real(18) + (0)*V_imag(18) =G= 0.88 ; (LHS = 1)
     
REMAINING 4 ENTRIES SKIPPED


---- p_generator_add  =E=  enforces generator participation factor in adjustment from schedule

p_generator_add(1)..  V_P(1) - V_P_system_deviation =E= 0.428843609632 ; (LHS = 0.428843609632)
     

---- c_BalanceP_control_solar  =E=  balance of real power for controllable solar

                NONE


---- c_switchedshuntB_Def  =E=  defines total susceptance from switched shunts at bus i

                NONE


---- c_shuntSwitchingDef1  =G=  defines number of steps switched - side 1

                NONE

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 57
display_start
Equation Listing    SOLVE acopf Using RMINLP From line 2107


---- c_shuntSwitchingDef2  =G=  defines number of steps switched - side 2

                NONE


---- c_totalShuntSwitchingDef  =G=  defines total number of steps switched

c_totalShuntSwitchingDef..  V_totalShuntSwitching =G= 0 ; (LHS = 0)
     

---- c_shuntSwitchingPenaltyDef1  =G=  defines local shunt switching penalty - segment 1

                NONE


---- c_shuntSwitchingPenaltyDef2  =G=  defines local shunt switching penalty - segment 2

                NONE


---- c_shuntTotalSwitchingPenalty  =G=  defines penalty incurred by total shunt switching

c_shuntTotalSwitchingPenalty..  V_shuntTotalSwitchingPenalty =G= 0 ; (LHS = 0)
     

---- c_shuntSwitchingTotalPenaltyDef  =G=   defines total penalty incurrent by shunt switching

c_shuntSwitchingTotalPenaltyDef..  - V_shuntTotalSwitchingPenalty + V_shuntSwitchingTotalPenalty =G= 0 ; (LHS = 0)
     

---- c_previous_solution_penalty_def  =G=  defines previous solution deviation penalty

c_previous_solution_penalty_def..  V_previous_solution_penalty =G= 0 ; (LHS = 0)
     

---- v_generator_addup  =L=  generator voltage constraints added selectively

v_generator_addup(149)..  (1)*V_real(149) =L= 1 ; (LHS = 1)
     

---- v_generator_addlow  =G=  generator voltage constraints added

v_generator_addlow(149)..  (1)*V_real(149) =G= 1 ; (LHS = 1)
     

---- c_obj  =E=  Objective function

c_obj..  - 5000000*V_P(1) - (153)*P_S(13) - (210.5)*P_S(57) - V_shuntSwitchingTotalPenalty + 203.84985461306*V_dem_Load(2) + 203.849854612579*V_dem_Load(3) + 203.84985461306*V_dem_Load(4) + 203.849854614503*V_dem_Load(5) - V_previous_solution_penalty
     
      + V_objcost =E= -2144217.41816 ; (LHS = -2144219.45916, INFES = 2.041 ****)
     
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 58
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


---- V_P  Real power generation of generator

V_P(1)
                (.LO, .L, .UP, .M = 0.428843609632, 0.428843609632, 1.0886, 0)
        1       c_BalanceP_nosolar(149)
        1       p_generator_add(1)
  -5.000000E+6  c_obj


---- V_Q  Reactive power generation of generator

V_Q(1)
                (.LO, .L, .UP, .M = -60, 0.0852, 60, 0)
        1       c_BalanceQ_nosolar(149)


---- P_S  real power generation of solar bus

P_S(13)
                (.LO, .L, .UP, .M = 0.006, 0.006, 0.06, 0)
        1       c_BalanceP_solar(13)
    (-153)      c_obj
        0       (OLD LEVEL ****)

P_S(57)
                (.LO, .L, .UP, .M = 0.004, 0.004, 0.05, 0)
        1       c_BalanceP_solar(57)
    (-210.5)    c_obj
        0       (OLD LEVEL ****)


---- Q_S  reactive power generation of solar bus

Q_S(13)
                (.LO, .L, .UP, .M = -300, 0, 300, 0)
        1       c_BalanceQ_solar(13)

Q_S(57)
                (.LO, .L, .UP, .M = -300, 0, 300, 0)
        1       c_BalanceQ_solar(57)


---- V_real  Real part of bus voltage

V_real(7)
                (.LO, .L, .UP, .M = -1.05, 1, 1.05, 0)
      -22.9258  c_LineIrij(7,13,1)
       16.4129  c_LineIrij(149,7,1)
       22.9258  c_LineIrji(7,13,1)
      -16.4129  c_LineIrji(149,7,1)
       46.9432  c_LineIqij(7,13,1)
      -33.6238  c_LineIqij(149,7,1)
      -46.9432  c_LineIqji(7,13,1)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 59
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


     V_real  Real part of bus voltage

       33.6238  c_LineIqji(149,7,1)
       (0)      c_BalanceP_nosolar(7)
 (2.2696020E-7) c_BalanceQ_nosolar(7)
       (1)      v_generator_hardupl(7)
       (1)      v_generator_harddownl(7)

V_real(13)
                (.LO, .L, .UP, .M = -1.05, 1, 1.05, 0)
       22.9258  c_LineIrij(7,13,1)
      -13.9207  c_LineIrij(13,18,1)
      -34.9288  c_LineIrij(13,54,1)
      -22.9258  c_LineIrji(7,13,1)
       13.9207  c_LineIrji(13,18,1)
       34.9288  c_LineIrji(13,54,1)
      -46.9432  c_LineIqij(7,13,1)
       28.5475  c_LineIqij(13,18,1)
       72.445   c_LineIqij(13,54,1)
       46.9432  c_LineIqji(7,13,1)
      -28.5475  c_LineIqji(13,18,1)
      -72.445   c_LineIqji(13,54,1)
       (0)      c_BalanceP_solar(13)
 (3.1207035E-7) c_BalanceQ_solar(13)
       (1)      v_generator_hardupl(13)
       (1)      v_generator_harddownl(13)

V_real(18)
                (.LO, .L, .UP, .M = -1.05, 1, 1.05, 0)
       13.9207  c_LineIrij(13,18,1)
      -13.9207  c_LineIrji(13,18,1)
      -28.5475  c_LineIqij(13,18,1)
       28.5475  c_LineIqji(13,18,1)
       (0)      c_BalanceP_nosolar(18)
 (1.5603520E-7) c_BalanceQ_nosolar(18)
       (1)      v_generator_hardupl(18)
       (1)      v_generator_harddownl(18)

REMAINING 4 ENTRIES SKIPPED

---- V_imag  Imaginary part of bus voltage

V_imag(7)
                (.LO, .L, .UP, .M = -1.05, 0, 1.05, 0)
      -46.9432  c_LineIrij(7,13,1)
       33.6238  c_LineIrij(149,7,1)
       46.9432  c_LineIrji(7,13,1)
      -33.6238  c_LineIrji(149,7,1)
      -22.9258  c_LineIqij(7,13,1)
       16.4129  c_LineIqij(149,7,1)
       22.9258  c_LineIqji(7,13,1)
      -16.4129  c_LineIqji(149,7,1)
 (-2.269602E-7) c_BalanceP_nosolar(7)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 60
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


     V_imag  Imaginary part of bus voltage

       (0)      c_BalanceQ_nosolar(7)
       (0)      v_generator_hardupl(7)
       (0)      v_generator_harddownl(7)

V_imag(13)
                (.LO, .L, .UP, .M = -1.05, 0, 1.05, 0)
       46.9432  c_LineIrij(7,13,1)
      -28.5475  c_LineIrij(13,18,1)
      -72.445   c_LineIrij(13,54,1)
      -46.9432  c_LineIrji(7,13,1)
       28.5475  c_LineIrji(13,18,1)
       72.445   c_LineIrji(13,54,1)
       22.9258  c_LineIqij(7,13,1)
      -13.9207  c_LineIqij(13,18,1)
      -34.9288  c_LineIqij(13,54,1)
      -22.9258  c_LineIqji(7,13,1)
       13.9207  c_LineIqji(13,18,1)
       34.9288  c_LineIqji(13,54,1)
 (-3.120703E-7) c_BalanceP_solar(13)
       (0)      c_BalanceQ_solar(13)
       (0)      v_generator_hardupl(13)
       (0)      v_generator_harddownl(13)

V_imag(18)
                (.LO, .L, .UP, .M = -1.05, 0, 1.05, 0)
       28.5475  c_LineIrij(13,18,1)
      -28.5475  c_LineIrji(13,18,1)
       13.9207  c_LineIqij(13,18,1)
      -13.9207  c_LineIqji(13,18,1)
 (-1.560352E-7) c_BalanceP_nosolar(18)
       (0)      c_BalanceQ_nosolar(18)
       (0)      v_generator_hardupl(18)
       (0)      v_generator_harddownl(18)

REMAINING 3 ENTRIES SKIPPED

---- V_LineIr  Real current flowing from bus i towards bus j on line c

V_LineIr(7,13,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       c_LineIrij(7,13,1)
      (-1)      c_BalanceP_nosolar(7)
       (0)      c_BalanceQ_nosolar(7)
       (0)      c_Lossijc(7,13,1)

V_LineIr(7,149,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       c_LineIrji(149,7,1)
      (-1)      c_BalanceP_nosolar(7)
       (0)      c_BalanceQ_nosolar(7)

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 61
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


     V_LineIr  Real current flowing from bus i towards bus j on line c

V_LineIr(13,7,1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       c_LineIrji(7,13,1)
      (-1)      c_BalanceP_solar(13)
       (0)      c_BalanceQ_solar(13)

REMAINING 9 ENTRIES SKIPPED

---- V_LineIq  Reactive current flowing from bus i towards bus j on line c

V_LineIq(7,13,1)
                (.LO, .L, .UP, .M = -INF, 9.45667508744918E-8, +INF, 0)
        1       c_LineIqij(7,13,1)
       (0)      c_BalanceP_nosolar(7)
       (1)      c_BalanceQ_nosolar(7)
 (-1.588721E-9) c_Lossijc(7,13,1)

V_LineIq(7,149,1)
                (.LO, .L, .UP, .M = -INF, 1.32393452645374E-7, +INF, 0)
        1       c_LineIqji(149,7,1)
       (0)      c_BalanceP_nosolar(7)
       (1)      c_BalanceQ_nosolar(7)

V_LineIq(13,7,1)
                (.LO, .L, .UP, .M = -INF, 9.45667508744918E-8, +INF, 0)
        1       c_LineIqji(7,13,1)
       (0)      c_BalanceP_solar(13)
       (1)      c_BalanceQ_solar(13)

REMAINING 9 ENTRIES SKIPPED

---- V_Lossijc  Loss on line c connecting bus i and bus j

V_Lossijc(7,13,1)
                (.LO, .L, .UP, .M = -INF, 7.51201111160489E-17, +INF, 0)
        1       c_Lossijc(7,13,1)
       -1       c_Lossi(7)

V_Lossijc(13,18,1)
                (.LO, .L, .UP, .M = -INF, 3.35988369842297E-16, +INF, 0)
        1       c_Lossijc(13,18,1)
       -1       c_Lossi(13)

V_Lossijc(13,54,1)
                (.LO, .L, .UP, .M = -INF, 2.04031655909903E-17, +INF, 0)
        1       c_Lossijc(13,54,1)
       -1       c_Lossi(13)

REMAINING 3 ENTRIES SKIPPED
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 62
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


---- V_Lossi  Loss on lines connecting with bus i

V_Lossi(7)
                (.LO, .L, .UP, .M = -INF, 7.51201111160489E-17, +INF, 0)
        1       c_Lossi(7)

V_Lossi(13)
                (.LO, .L, .UP, .M = -INF, 3.56391535433287E-16, +INF, 0)
        1       c_Lossi(13)

V_Lossi(18)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       c_Lossi(18)

REMAINING 4 ENTRIES SKIPPED

---- V_totalShuntSwitching  total number of steps switched

V_totalShuntSwitching
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       c_totalShuntSwitchingDef


---- V_shuntTotalSwitchingPenalty  penalty incurred by total shunt switching

V_shuntTotalSwitchingPenalty
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       c_shuntTotalSwitchingPenalty
       -1       c_shuntSwitchingTotalPenaltyDef


---- V_shuntSwitchingTotalPenalty  total penalty incurrent by shunt switching

V_shuntSwitchingTotalPenalty
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       c_shuntSwitchingTotalPenaltyDef
       -1       c_obj


---- V_dem_Load  demand load level

V_dem_Load(2)
                (.LO, .L, .UP, .M = 0, 0, 0.000207883190234, 0)
       -1       c_BalanceP_nosolar(18)
      203.8499  c_obj

V_dem_Load(3)
                (.LO, .L, .UP, .M = 0, 0, 0.000207883190234, 0)
       -1       c_BalanceP_nosolar(18)
      203.8499  c_obj

V_dem_Load(4)
                (.LO, .L, .UP, .M = 0, 0, 0.000207883190234, 0)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 63
display_start
Column Listing      SOLVE acopf Using RMINLP From line 2107


     V_dem_Load  demand load level

       -1       c_BalanceP_nosolar(18)
      203.8499  c_obj

REMAINING ENTRY SKIPPED

---- V_previous_solution_penalty  total penalty on deviation to previous solution

V_previous_solution_penalty
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       c_previous_solution_penalty_def
       -1       c_obj


---- V_objcost  Total cost of objective function

V_objcost
                (.LO, .L, .UP, .M = -INF, 7.37984193494078E-16, +INF, 0)
        1       c_obj


---- V_P_system_deviation  system total adjustment from real generation schedule

V_P_system_deviation
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       p_generator_add(1)

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 64
display_start
Model Statistics    SOLVE acopf Using RMINLP From line 2107


MODEL STATISTICS

BLOCKS OF EQUATIONS          26     SINGLE EQUATIONS           73
BLOCKS OF VARIABLES          17     SINGLE VARIABLES           66  2 projected
NON ZERO ELEMENTS           274     NON LINEAR N-Z            114
DERIVATIVE POOL              20     CONSTANT POOL              27
CODE LENGTH                 328


GENERATION TIME      =        0.002 SECONDS      4 MB  24.9.1 r63795 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      4 MB  24.9.1 r63795 LEX-LEG
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 65
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


               S O L V E      S U M M A R Y

     MODEL   acopf               OBJECTIVE  V_objcost
     TYPE    RMINLP              DIRECTION  MINIMIZE
     SOLVER  KNITRO              FROM LINE  2107

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE                5.6070

 RESOURCE USAGE, LIMIT          0.045        60.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

KNITRO           24.9.1 r63795 Released Aug 30, 2017 LEG x86 64bit/Linux      

*** Error Cannot open parameter file "/home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/knitro.opt"
*** Error Error code = 2; No such file or directory
Artelys Knitro Optimizer 10.3.0

=======================================
          Commercial License
         Artelys Knitro 10.3.0
=======================================

Knitro presolve eliminated 8 variables 
and 11 constraints.

datacheck:               0
hessian_no_f:            1
maxtime_real:            60
newpoint:                3
par_concurrent_evals:    0
Knitro changing algorithm from AUTO to 1.
Knitro changing bar_initpt from AUTO to 3.
Knitro changing bar_murule from AUTO to 4.
Knitro changing bar_penaltycons from AUTO to 1.
Knitro changing bar_penaltyrule from AUTO to 2.
Knitro changing bar_switchrule from AUTO to 2.
Knitro changing linesearch from AUTO to 1.
Knitro changing linsolver from AUTO to 2.
Knitro shifted start point to satisfy presolved bounds (11 variables).
Knitro fixing 3 variables eliminated from the presolve.
Knitro reinitializing 1 variable eliminated from the presolve.

Problem Characteristics                    ( Presolved)
-----------------------
Objective goal:  Minimize
Number of variables:                          65 (        57)
    bounded below only:                        4 (         4)
    bounded above only:                        0 (         0)
    bounded below and above:                  23 (        23)
    fixed:                                     0 (         0)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 66
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


    free:                                     38 (        30)
Number of constraints:                        72 (        61)
    linear equalities:                        32 (        24)
    nonlinear equalities:                     20 (        20)
    linear one-sided inequalities:             4 (         1)
    nonlinear one-sided inequalities:         16 (        16)
    linear two-sided inequalities:             0 (         0)
    nonlinear two-sided inequalities:          0 (         0)
Number of nonzeros in Jacobian:              264 (       246)
Number of nonzeros in Hessian:                79 (        79)

  Iter      Objective      FeasError   OptError    ||Step||    CGits 
--------  --------------  ----------  ----------  ----------  -------
       0    1.484471e+06   7.257e-01
      10    5.607007e+00   1.787e-08   7.213e-09   1.635e-02        0

EXIT: Locally optimal solution found.

Final Statistics
----------------
Final objective value               =   5.60700676124543e+00
Final feasibility error (abs / rel) =   1.79e-08 / 1.79e-08
Final optimality error  (abs / rel) =   7.21e-09 / 7.21e-11
# of iterations                     =         10 
# of CG iterations                  =          0 
# of function evaluations           =         12
# of gradient evaluations           =         12
# of Hessian evaluations            =         10
Total program time (secs)           =       0.01081 (     0.008 CPU time)
Time spent in evaluations (secs)    =       0.00523

===============================================================================

Solve finished: status = optimal

---- EQU c_LineIrij  Real current flowing from bus i into bus j along line c

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1          .              .              .           282.9365      
13 .18.1          .              .              .           283.7911      
13 .54.1          .              .              .           283.7911      
149.7 .1          .              .              .           281.5952      
54 .57.1          .              .              .           284.0774      
54 .56.1          .              .              .           284.0774      

---- EQU c_LineIrji  Real  current flowing from bus j into bus i along line c

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1          .              .              .           283.7911      
13 .18.1          .              .              .           284.0228      
13 .54.1          .              .              .           284.0774      
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 67
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


     EQU c_LineIrji  Real  current flowing from bus j into bus i along line c

                LOWER          LEVEL          UPPER         MARGINAL

149.7 .1          .              .              .           282.9365      
54 .57.1          .              .              .           284.3904      
54 .56.1          .              .              .           284.0774      

---- EQU c_LineIqij  Reactive current  flowing from bus i into bus j along line c

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1          .              .              .            -2.9988      
13 .18.1          .              .              .            -4.4653      
13 .54.1          .              .              .            -4.4653      
149.7 .1          .              .              .       8.152999E-10      
54 .57.1          .              .              .            -5.0838      
54 .56.1          .              .              .            -5.0838      

---- EQU c_LineIqji  Reactive current flowing from bus j into bus i along line c

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1          .              .              .            -4.4653      
13 .18.1          .              .              .            -5.6886      
13 .54.1          .              .              .            -5.0838      
149.7 .1          .              .              .            -2.9988      
54 .57.1          .              .              .            -5.7465      
54 .56.1          .              .              .            -5.0838      

---- EQU c_BalanceP_nosolar  Balance of real power for bus without solar

           LOWER          LEVEL          UPPER         MARGINAL

7           0.1207         0.1207         0.1207       284.4679      
18          0.1322         0.1322         0.1322       287.0241      
149          .              .              .           281.5952      
54           .              .              .           286.5528      
56           .              .              .           286.5528      

---- EQU c_BalanceP_solar  Balance of real power for bus with solar

          LOWER          LEVEL          UPPER         MARGINAL

13          .              .              .           285.9571      
57         0.1980         0.1980         0.1980       287.2051      
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 68
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


---- EQU c_BalanceQ_nosolar  Balance of reactive power for bus without solar

           LOWER          LEVEL          UPPER         MARGINAL

7           0.0359         0.0359         0.0359         0.1182      
18          0.0335         0.0335         0.0335         0.2744      
149          .              .              .       -4.10494E-10      
54           .              .              .             0.0014      
56           .              .              .             0.0014      

---- EQU c_BalanceQ_solar  Balance of reactive power for bus with solar

          LOWER          LEVEL          UPPER         MARGINAL

13          .       -1.787119E-8          .       2.717313E-10      
57         0.0613         0.0613         0.0613   1.401244E-10      

---- EQU c_Lossijc  Loss on line c connecting bus i and bus j

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1          .              .              .       6.113089E-13      
13 .18.1          .              .              .       3.001759E-14      
13 .54.1          .              .              .       1.300768E-13      
149.7 .1          .              .              .       7.547469E-13      
54 .57.1          .              .              .       1.421205E-13      
54 .56.1          .              .              .       2.121025E-26      

---- EQU c_Lossi  Loss on lines connected with bus i

           LOWER          LEVEL          UPPER         MARGINAL

7            .              .              .             EPS         
13           .              .              .             EPS         
18           .              .              .             EPS         
149          .              .              .             EPS         
54           .              .              .             EPS         
57           .              .              .             EPS         
56           .              .              .             EPS         

---- EQU v_generator_hardupl  bus voltage constraints upper bound

           LOWER          LEVEL          UPPER         MARGINAL

7          -INF            0.9947         1.1500   -9.609611E-7      
13         -INF            0.9925         1.1500   -9.618446E-7      
18         -INF            0.9897         1.1500   -9.443200E-7      
149        -INF            1.0000         1.1500   -9.818600E-7      
54         -INF            0.9915         1.1500   -9.587866E-7      
57         -INF            0.9904         1.1500   -9.556326E-7      
56         -INF            0.9915         1.1500   -9.587866E-7      
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 69
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


---- EQU v_generator_harddownl  bus voltage constraints lower bound

           LOWER          LEVEL          UPPER         MARGINAL

7           0.8800         0.9947        +INF      1.2719740E-6      
13          0.8800         0.9925        +INF      1.2872929E-6      
18          0.8800         0.9897        +INF      1.3193475E-6      
149         0.8800         1.0000        +INF      1.2273322E-6      
54          0.8800         0.9915        +INF      1.2970097E-6      
57          0.8800         0.9904        +INF      1.3076738E-6      
56          0.8800         0.9915        +INF      1.2970097E-6      

---- EQU p_generator_add  enforces generator participation factor in adjustment from schedule

         LOWER          LEVEL          UPPER         MARGINAL

1         0.4288         0.4288         0.4288         EPS         

---- EQU c_BalanceP_control_solar  balance of real power for controllable solar

                NONE


---- EQU c_switchedshuntB_Def  defines total susceptance from switched shunts at bus i

                NONE


---- EQU c_shuntSwitchingDef1  defines number of steps switched - side 1

                NONE


---- EQU c_shuntSwitchingDef2  defines number of steps switched - side 2

                NONE


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU c_totalSh~          .             5.6767        +INF            EPS         

  c_totalShuntSwitchingDef  defines total number of steps switched

---- EQU c_shuntSwitchingPenaltyDef1  defines local shunt switching penalty - segment 1

                NONE

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 70
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU c_shuntTo~          .       3.2418828E-7        +INF            EPS         
---- EQU c_shuntSw~          .       3.2580533E-7        +INF            0.6927      
---- EQU c_previou~          .       2.1599122E-7        +INF            EPS         

  c_shuntTotalSwitchingPenalty  defines penalty incurred by total shunt switching
  c_shuntSwitchingTotalPenaltyDef   defines total penalty incurrent by shunt switching
  c_previous_solution_penalty_def  defines previous solution deviation penalty

---- EQU v_generator_addup  generator voltage constraints added selectively

           LOWER          LEVEL          UPPER         MARGINAL

149        -INF            1.0000         1.0000     -3103.9194      

---- EQU v_generator_addlow  generator voltage constraints added

           LOWER          LEVEL          UPPER         MARGINAL

149         1.0000         1.0000        +INF         3101.8346      

                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU c_obj        -2.144217E+6   -2.144217E+6   -2.144217E+6         1.0000      

  c_obj  Objective function

---- VAR V_P  Real power generation of generator

         LOWER          LEVEL          UPPER         MARGINAL

1         0.4288         0.4288         1.0886   4999718.4048      

---- VAR V_Q  Reactive power generation of generator

         LOWER          LEVEL          UPPER         MARGINAL

1       -60.0000         0.0146        60.0000   3.741088E-12      

---- VAR P_S  real power generation of solar bus

          LOWER          LEVEL          UPPER         MARGINAL

13         0.0060         0.0166         0.0600         0.0001      
57         0.0040         0.0089         0.0500         0.0002      
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 71
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


---- VAR Q_S  reactive power generation of solar bus

          LOWER          LEVEL          UPPER         MARGINAL

13      -300.0000         0.0614       300.0000   -3.17090E-13      
57      -300.0000         0.0621       300.0000   -2.53801E-13      

---- VAR V_real  Real part of bus voltage

           LOWER          LEVEL          UPPER         MARGINAL

7          -1.0500         0.9946         1.0500         EPS         
13         -1.0500         0.9924         1.0500   -3.693163E-5      
18         -1.0500         0.9896         1.0500   1.1332376E-5      
149        -1.0500         1.0000         1.0500   -2.981997E-6      
54         -1.0500         0.9914         1.0500   -2.837052E-6      
57         -1.0500         0.9902         1.0500   -1.181227E-5      
56         -1.0500         0.9914         1.0500   -2.836631E-6      

---- VAR V_imag  Imaginary part of bus voltage

          LOWER          LEVEL          UPPER         MARGINAL

7         -1.0500        -0.0101         1.0500   2.3587818E-7      
13        -1.0500        -0.0156         1.0500        -0.0003      
18        -1.0500        -0.0189         1.0500   1.4326314E-7      
54        -1.0500        -0.0177         1.0500   1.1645070E-8      
57        -1.0500        -0.0200         1.0500        -0.0001      
56        -1.0500        -0.0177         1.0500   1.2066253E-8      

---- VAR V_LineIr  Real current flowing from bus i towards bus j on line c

                 LOWER          LEVEL          UPPER         MARGINAL

7  .13 .1        -INF            0.3079        +INF            EPS         
7  .149.1        -INF           -0.4288        +INF            EPS         
13 .7  .1        -INF           -0.3079        +INF            EPS         
13 .18 .1        -INF            0.1329        +INF            EPS         
13 .54 .1        -INF            0.1908        +INF            EPS         
18 .13 .1        -INF           -0.1329        +INF            EPS         
149.7  .1        -INF            0.4288        +INF            EPS         
54 .13 .1        -INF           -0.1908        +INF            EPS         
54 .57 .1        -INF            0.1908        +INF            EPS         
54 .56 .1        -INF      3.3545600E-9        +INF            EPS         
57 .54 .1        -INF           -0.1908        +INF            EPS         
56 .54 .1        -INF      -1.32148E-15        +INF            EPS         
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 72
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


---- VAR V_LineIq  Reactive current flowing from bus i towards bus j on line c

                 LOWER          LEVEL          UPPER         MARGINAL

7  .13 .1        -INF            0.0227        +INF            EPS         
7  .149.1        -INF            0.0146        +INF            EPS         
13 .7  .1        -INF           -0.0227        +INF            EPS         
13 .18 .1        -INF           -0.0364        +INF            EPS         
13 .54 .1        -INF           -0.0030        +INF            EPS         
18 .13 .1        -INF            0.0364        +INF            EPS         
149.7  .1        -INF           -0.0146        +INF            EPS         
54 .13 .1        -INF            0.0030        +INF            EPS         
54 .57 .1        -INF           -0.0030        +INF            EPS         
54 .56 .1        -INF      1.8749973E-7        +INF            EPS         
57 .54 .1        -INF            0.0030        +INF            EPS         
56 .54 .1        -INF      -2.47267E-14        +INF            EPS         

---- VAR V_Lossijc  Loss on line c connecting bus i and bus j

                LOWER          LEVEL          UPPER         MARGINAL

7  .13.1        -INF            0.0008        +INF            EPS         
13 .18.1        -INF            0.0003        +INF            EPS         
13 .54.1        -INF            0.0002        +INF            EPS         
149.7 .1        -INF            0.0022        +INF            EPS         
54 .57.1        -INF            0.0002        +INF            EPS         
54 .56.1        -INF      2.954062E-16        +INF            EPS         

---- VAR V_Lossi  Loss on lines connecting with bus i

           LOWER          LEVEL          UPPER         MARGINAL

7          -INF            0.0008        +INF            EPS         
13         -INF            0.0005        +INF            EPS         
18         -INF             .            +INF            EPS         
149        -INF            0.0022        +INF            EPS         
54         -INF            0.0002        +INF            EPS         
57         -INF             .            +INF            EPS         
56         -INF             .            +INF            EPS         

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR V_totalSh~          .             5.6767        +INF            EPS         
---- VAR V_shuntTo~          .       3.2418828E-7        +INF            0.6927      
---- VAR V_shuntSw~          .       6.4999361E-7        +INF            0.3073      

  V_totalShuntSwitching  total number of steps switched
  V_shuntTotalSwitchingPenalty  penalty incurred by total shunt switching
  V_shuntSwitchingTotalPenalty  total penalty incurrent by shunt switching
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 73
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


---- VAR V_dem_Load  demand load level

         LOWER          LEVEL          UPPER         MARGINAL

2          .              .             0.0002        83.1742      
3          .              .             0.0002        83.1742      
4          .              .             0.0002        83.1742      
5          .              .             0.0002        83.1742      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR V_previou~          .       2.1599122E-7        +INF            1.0000      
---- VAR V_objcost         -INF            5.6070        +INF             .          
---- VAR V_P_syste~        -INF      4.335421E-14        +INF            EPS         

  V_previous_solution_penalty  total penalty on deviation to previous solution
  V_objcost  Total cost of objective function
  V_P_system_deviation  system total adjustment from real generation schedule


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                            50  PROJECTED
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 74
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


**** SOLVER STATUS FILE LISTED BELOW
=C
=CKNITRO           24.9.1 r63795 Released Aug 30, 2017 LEG x86 64bit/Linux      
=C
=0KNITRO           24.9.1 r63795 Released Aug 30, 2017 LEG x86 64bit/Linux      
=1
=2
=1
=C*** Error Cannot open parameter file "/home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/knitro.opt"
=C*** Error Error code = 2; No such file or directory
=2
=CArtelys Knitro Optimizer 10.3.0
=9?
?C
?C=======================================
?C          Commercial License
?C         Artelys Knitro 10.3.0
?C=======================================
?C
?CKnitro presolve eliminated 8 variables 
?Cand 11 constraints.
?C
?Cdatacheck:               0
?Chessian_no_f:            1
?Cmaxtime_real:            60
?Cnewpoint:                3
?Cpar_concurrent_evals:    0
?CKnitro changing algorithm from AUTO to 1.
?CKnitro changing bar_initpt from AUTO to 3.
?CKnitro changing bar_murule from AUTO to 4.
?CKnitro changing bar_penaltycons from AUTO to 1.
?CKnitro changing bar_penaltyrule from AUTO to 2.
?CKnitro changing bar_switchrule from AUTO to 2.
?CKnitro changing linesearch from AUTO to 1.
?CKnitro changing linsolver from AUTO to 2.
?CKnitro shifted start point to satisfy presolved bounds (11 variables).
?CKnitro fixing 3 variables eliminated from the presolve.
?CKnitro reinitializing 1 variable eliminated from the presolve.
?C
?CProblem Characteristics                    ( Presolved)
?C-----------------------
?CObjective goal:  Minimize
?CNumber of variables:                          65 (        57)
?C    bounded below only:                        4 (         4)
?C    bounded above only:                        0 (         0)
?C    bounded below and above:                  23 (        23)
?C    fixed:                                     0 (         0)
?C    free:                                     38 (        30)
?CNumber of constraints:                        72 (        61)
?C    linear equalities:                        32 (        24)
?C    nonlinear equalities:                     20 (        20)
?C    linear one-sided inequalities:             4 (         1)
?C    nonlinear one-sided inequalities:         16 (        16)
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 75
display_start
Solution Report     SOLVE acopf Using RMINLP From line 2107


?C    linear two-sided inequalities:             0 (         0)
?C    nonlinear two-sided inequalities:          0 (         0)
?CNumber of nonzeros in Jacobian:              264 (       246)
?CNumber of nonzeros in Hessian:                79 (        79)
?C
?C  Iter      Objective      FeasError   OptError    ||Step||    CGits 
?C--------  --------------  ----------  ----------  ----------  -------
?C       0    1.484471e+06   7.257e-01
?C      10    5.607007e+00   1.787e-08   7.213e-09   1.635e-02        0
?C
?CEXIT: Locally optimal solution found.
?C
?CFinal Statistics
?C----------------
?CFinal objective value               =   5.60700676124543e+00
?CFinal feasibility error (abs / rel) =   1.79e-08 / 1.79e-08
?CFinal optimality error  (abs / rel) =   7.21e-09 / 7.21e-11
?C# of iterations                     =         10 
?C# of CG iterations                  =          0 
?C# of function evaluations           =         12
?C# of gradient evaluations           =         12
?C# of Hessian evaluations            =         10
?CTotal program time (secs)           =       0.01081 (     0.008 CPU time)
?CTime spent in evaluations (secs)    =       0.00523
?C
?C===============================================================================
?C
?9=
=CSolve finished: status = optimal
**** SOLVER STATUS FILE LISTED ABOVE
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 76
display_start
E x e c u t i o n


----   2209 PARAMETER TotalLoss            =        0.004   Total Loss of all the lines
            PARAMETER infeas               =        0.000  Number of infeasibilities from model solve

----   2234 PARAMETER Vm  bus voltage magnitude

7   0.995,    13  0.993,    18  0.990,    149 1.000,    54  0.992,    57  0.990,    56  0.992


----   2273 PARAMETER Pmax  gen maximum real power output

1 1.089


----   2273 PARAMETER Pmin  gen minimum real power output

1 0.206


----   2273 PARAMETER ratio  transformer tap ratio

                  1

7  .13        1.000
7  .149       1.000
13 .7         1.000
13 .18        1.000
13 .54        1.000
18 .13        1.000
149.7         1.000
54 .13        1.000
54 .57        1.000
54 .56        1.000
57 .54        1.000
56 .54        1.000


----   2273 PARAMETER switchedShuntB_init  initial value of switched shunt susceptance

                      ( ALL       0.000 )


----   2273 VARIABLE V_dem_Load.L  demand load level

                      ( ALL       0.000 )


----   2273 VARIABLE V_switchedshuntB.L  total susceptance from switched shunts connected to bus i

                      ( ALL       0.000 )

GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 77
display_start
E x e c u t i o n


----   2273 VARIABLE V_P.L  Real power generation of generator

1 0.429


----   2273 VARIABLE V_P.Up (+INF) Real power generation of generator

1 1.089


----   2273 VARIABLE V_P.Lo (-INF) Real power generation of generator

1 0.429


----   2273 VARIABLE V_Q.L  Reactive power generation of generator

1 0.015


----   2273 VARIABLE V_Q.Up (+INF) Reactive power generation of generator

1 60.000


----   2273 VARIABLE V_Q.Lo (-INF) Reactive power generation of generator

1 -60.000


----   2273 PARAMETER Qmax  gen maximum reactive power output

1 60.000


----   2273 PARAMETER Qmin  gen minimum reactive power output

1 -60.000


**** REPORT FILE SUMMARY

report_file /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/report.txt


EXECUTION TIME       =        0.003 SECONDS      3 MB  24.9.1 r63795 LEX-LEG
GAMS 24.9.1  r63795 Released Aug 30, 2017 LEX-LEG x86 64bit/Linux                                                                                                                                                                     11/02/17 11:02:39 Page 78
display_start
E x e c u t i o n


USER: GAMS Development Corporation, USA              G871201/0000CA-ANY
      Free Demo, +1 202-342-0180, support@gams.com, www.gams.com DC0000


**** FILE SUMMARY

Input      /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/iv_acopf_reformulation_lop_adj.gms
Output     /home/yingying/git/volttron/TransactiveEnergy/CoordinatorAgent/coordinator/_gams_py_gjo0.lst
