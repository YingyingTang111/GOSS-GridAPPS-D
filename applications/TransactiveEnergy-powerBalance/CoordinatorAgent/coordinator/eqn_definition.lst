GAMS 24.8.5  r61358 Released May 10, 2017 WEX-WEI x86 64bit/MS Windows 10/06/17 13:10:14 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1   
   2  * defines previous solution deviation penalty
   3  c_previous_solution_penalty_def..
****                                $140
   4      V_previous_solution_penalty
****                                $140
   5        =g=
   6      previous_solution_penalty_2 * (
****                                $140
   7          sum(gen, sqr(V_P_prior(gen) - V_P(gen)))
****                $120           $140       $140
   8        + sum(gen, sqr(V_Q_prior(gen) - V_Q(gen)))
****                               $140       $140
   9        + sum(i, sqr(P_S_prior(i) - P_S(i)))
****              $120           $140     $140
  10        + sum(i, sqr(Q_S_prior(i) - Q_S(i)))
****                             $140     $140
  11        + sum(i, sqr(V_real_prior(i) - V_real(i)))
****                                $140        $140
  12        + sum(i, sqr(V_imag_prior(i) - V_imag(i)))
****                                $140        $140
  13        + sum(i, sqr(Solar_p_curtail_prior(i) - Solar_p_curtail(i)))
****                                         $140                 $140
  14        + sum(i, sqr(De_response_Inc_P_prior(i) - De_response_Inc_P(i)))
****                                           $140                   $140
  15        + sum(i, sqr(De_response_Dec_P_prior(i) - De_response_Dec_P(i))));
****                                           $140                   $140
  16   
  17  * defines total load bus voltage deviation penalty
  18  c_load_bus_volt_pen_def..
****                        $140
  19      V_load_bus_volt_pen
****                        $140
  20        =g=
  21      sum(i$(bus_penalize_volt_mag_target(i) and type(i) eq 1),
****                                        $140        $140
  22            load_bus_volt_pen_coeff_1 * V_load_bus_volt_pen_dev(i)
****                                    $140                      $140
  23          + load_bus_volt_pen_coeff_2 * sqr(V_load_bus_volt_pen_dev(i)))
****                                    $140
  24  ;
  25   
  26   
  27   
  28  * defines total susceptance from switched shunts connected to a bus
  29  c_switchedshuntB_def(i)$sum(bus_s$numBswitched(i, bus_s), 1)..
****                     $140         $120         $140
  30      V_switchedshuntB(i)
****                     $140
  31        =e=
  32      sum(bus_s$numBswitched(i,bus_s), Bswitched(i,bus_s) * V_shunt(i,bus_s)
****                                               $140               $140
      );
  33   
  34  * defines number of steps switched - side 1
  35  c_shuntSwitchingDef1(i,bus_s)$numBswitched(i,bus_s)..
****                     $140
  36      V_shuntSwitching(i,bus_s)
****                     $140
  37        =g=
  38      V_shunt(i,bus_s) - numShuntStepsOn_init(i,bus_s)
****                                            $140
  39  ;
  40   
  41  * defines number of steps switched - side 2
  42  c_shuntSwitchingDef2(i,bus_s)$numBswitched(i,bus_s)..
****                     $140
  43      V_shuntSwitching(i,bus_s)
  44        =g=
  45      numShuntStepsOn_init(i,bus_s) - V_shunt(i,bus_s)
  46  ;
  47   
  48  * defines total number of steps switched
  49  c_totalShuntSwitchingDef..
****                         $140
  50      V_totalShuntSwitching
****                          $140
  51        =g=
  52      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitching(i,bus_s))
  53  ;
  54   
  55  * defines local shunt switching penalty - segment 1
  56  c_shuntSwitchingPenaltyDef1(i,bus_s)$numBswitched(i,bus_s)..
****                            $140
  57      V_shuntSwitchingPenalty(i,bus_s)
****                            $140
  58        =g=
  59      shuntSwitchingPenalty1 * V_shuntSwitching(i,bus_s)
****                           $140
  60  ;
  61   
  62  * defines local shunt switching penalty - segment 2
  63  c_shuntSwitchingPenaltyDef2(i,bus_s)$numBswitched(i,bus_s)..
****                            $140
  64      V_shuntSwitchingPenalty(i,bus_s)
  65        =g=
  66      shuntSwitchingPenalty2 * (V_shuntSwitching(i,bus_s) - shuntSwitchingTo
****                           $140                                             
      lerance)
            $140
  67  ;
  68   
  69  * defines penalty incurred by total shunt switching
  70  c_shuntTotalSwitchingPenalty..
****                             $140
  71      V_shuntTotalSwitchingPenalty
****                                 $140
  72        =g=
  73      shuntSwitchingBudgetPenalty * (V_totalShuntSwitching - shuntSwitchingB
****                                $140                                        
      udget)
          $140
  74  ;
  75   
  76  * defines total penalty incurrent by shunt switching
  77  c_shuntSwitchingTotalPenaltyDef..
****                                $140
  78      V_shuntSwitchingTotalPenalty
****                                 $140
  79        =g=
  80      V_shuntTotalSwitchingPenalty +
  81      sum((i,bus_s)$numBswitched(i,bus_s),V_shuntSwitchingPenalty(i,bus_s))
  82  ;
  83   
  84  * Limit apparent current on a line
  85  c_I_limit(i,j,c)$(branchstatus(i,j,c) or branchstatus(j,i,c))..
****          $140$120,120         $140
  86      sqr(V_LineIr(i,j,c)) + sqr(V_LineIq(i,j,c))
****                 $140                   $140
  87        =l=
  88      sqr(currentrate(i,j,c))
****                    $140
  89  ;
  90   
  91  *Limit voltage magnitude on a line
  92  c_V_limit_lo(i)..
****             $140
  93      sqr(V_real(i)) + sqr(V_imag(i)) =g= sqr(minVm(i))
****                                                  $140
  94  ;
  95   
  96  *Limit voltage magnitude on a line
  97  c_V_limit_up(i)..
****             $140
  98      sqr(V_real(i)) + sqr(V_imag(i)) =l= sqr(maxVm(i))
****                                                  $140
  99  ;
 100   
 101  *Real current flowing from bus i into bus j along line c
 102  c_LineIrij(i,j,c)$(branchstatus(i,j,c))..
****           $140
 103           V_LineIr(i,j,c) =e=
 104              1/sqr(ratio(i,j,c))
****                        $140
 105                  * (g(i,j,c)*V_real(i) - (b(i,j,c) + bc(i,j,c)/2)*V_imag(i)
****                     $140                  $140        $140
      )
 106              - 1/ratio(i,j,c)
 107                  * (  (g(i,j,c)*V_real(j) - b(i,j,c)*V_imag(j))*cos(angle(i
****                                                                         $14
      ,j,c))
      0
 108                     - (g(i,j,c)*V_imag(j) + b(i,j,c)*V_real(j))*sin(angle(i
      ,j,c))
 109                    )
 110  ;
 111   
 112  *Real current flowing from bus j into bus i along line c
 113  c_LineIrji(i,j,c)$(branchstatus(i,j,c))..
****           $140
 114           V_LineIr(j,i,c) =e=
 115              (g(i,j,c)*V_real(j) - (b(i,j,c) + bc(i,j,c)/2)*V_imag(j))
 116              - 1/ratio(i,j,c)
 117                  * (  (g(i,j,c)*V_real(i) - b(i,j,c)*V_imag(i))*cos(-angle(
      i,j,c))
 118                     - (g(i,j,c)*V_imag(i) + b(i,j,c)*V_real(i))*sin(-angle(
      i,j,c))
 119                    )
 120  ;
 121   
 122  *Reactive current flowing from bus i into bus j along line c
 123  c_LineIqij(i,j,c)$(branchstatus(i,j,c))..
****           $140
 124           V_LineIq(i,j,c) =e=
 125              1/sqr(ratio(i,j,c))
 126                  * (g(i,j,c)*V_imag(i) + (b(i,j,c) + bc(i,j,c)/2)*V_real(i)
      )
 127              - 1/ratio(i,j,c)
 128                  * (  (g(i,j,c)*V_imag(j) + b(i,j,c)*V_real(j))*cos(angle(i
      ,j,c))
 129                     + (g(i,j,c)*V_real(j) - b(i,j,c)*V_imag(j))*sin(angle(i
      ,j,c))
 130                    )
 131  ;
 132   
 133  *Reactive current flowing from bus j into bus i along line c
 134  c_LineIqji(i,j,c)$(branchstatus(i,j,c))..
****           $140
 135           V_LineIq(j,i,c) =e=
 136              (g(i,j,c)*V_imag(j) + (b(i,j,c) + bc(i,j,c)/2)*V_real(j))
 137              - 1/ratio(i,j,c)
 138                  * (  (g(i,j,c)*V_imag(i) + b(i,j,c)*V_real(i))*cos(-angle(
      i,j,c))
 139                     + (g(i,j,c)*V_real(i) - b(i,j,c)*V_imag(i))*sin(-angle(
      i,j,c))
 140                    )
 141  ;
 142   
 143  *Balance of real power for bus without solar
 144  c_BalanceP_nosolar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarb
****                   $140                               $120          $140
      us,i)) eq 0))..
 145          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
****                       $140              $140
 146          - (Pd(i)+ demLoad('1')$(demLocation(i) eq 1)-sum(demanStep ,V_dem_
****              $140        $140              $140                   $120,340 
      Load(demanStep) )+ De_response_Inc_P(i)$(Pd_respon_location(i)) + De_respo
         $140                                                   $140
      nse_Dec_P(i)$(Pd_respon_location(i))   )
 147          + V_p_over(i)
****                   $140
 148          - V_p_under(i)
****                    $140
 149              =e=
 150            V_real(i) *
 151          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
 152            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIr(i,j,c)) )
 153          + V_imag(i) *
 154           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
 155            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIq(i,j,c)))
 156          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
****             $140
 157  ;
 158  *Balance of real power for bus with uncontrollable solar installed
 159  c_BalanceP_solar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus
****                 $140                                                       
      ,i)) ne 0) and contro_solar_location(i) eq 0)..
                                         $140
 160          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
 161           - (Pd(i)- P_S(i)+De_response_Inc_P(i)$(Pd_respon_location(i)) + D
      e_response_Dec_P(i)$(Pd_respon_location(i)))
 162          + V_p_over(i)
 163          - V_p_under(i)
 164              =e=
 165            V_real(i) *
 166          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
 167            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIr(i,j,c)) )
 168          + V_imag(i) *
 169           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
 170            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIq(i,j,c)))
 171          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
 172  ;
 173   
 174  c_BalanceP_control_solar(i)$(type(i) ne 4 and  contro_solar_location(i) ne
****                         $140
       0)..
 175          sum(gen$(atBus(gen,i) and status(gen)), V_P(gen))
 176           - (Pd(i)+ De_response_Inc_P(i)$(Pd_respon_location(i))+ De_respon
      se_Dec_P(i)$(Pd_respon_location(i)) - (P_S(i)-Solar_p_curtail(i) ))
 177          + V_p_over(i)
 178          - V_p_under(i)
 179              =e=
 180            V_real(i) *
 181          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
 182            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIr(i,j,c)) )
 183          + V_imag(i) *
 184           (sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
 185            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIq(i,j,c)))
 186          + Gs(i) * (sqr(V_real(i)) + sqr(V_imag(i)))
 187  ;
 188  * Balance of reactive power for bus without solar
 189  c_BalanceQ_nosolar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarb
****                   $140
      us,i)) eq 0))..
 190          sum(gen$(atBus(gen,i) and status(gen)), V_Q(gen))
 191          - (Qd(i)+Pd_respon_q_up(i)*De_response_Inc_P(i)$(Pd_respon_locatio
****              $140              $140                                        
      n(i)) + Pd_respon_q_down(i)*De_response_Dec_P(i)$(Pd_respon_location(i))  
                             $140
      )
 192          + V_q_over(i)
****                   $140
 193          - V_q_under(i)
****                    $140
 194              =e=
 195          - V_real(i) *
 196          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
 197            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIq(i,j,c)))
 198          + V_imag(i) *
 199          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
 200            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIr(i,j,c)))
 201          - (Bs(i) + V_switchedshuntB(i)$sum(bus_s$numbswitched(i, bus_s), 1
****              $140
      )) * (sqr(V_real(i)) + sqr(V_imag(i)));
 202  ;
 203  * Balance of reactive power for bus with solar
 204  c_BalanceQ_solar(i)$(type(i) ne 4 and (sum(solarbus,solarlocation(solarbus
****                 $140
      ,i)) ne 0))..
 205          sum(gen$(atBus(gen,i) and status(gen)), V_Q(gen))
 206          - ( Qd(i)+ Pd_respon_q_up(i)*De_response_Inc_P(i)$(Pd_respon_locat
      ion(i)) + Pd_respon_q_down(i)*De_response_Dec_P(i)$(Pd_respon_location(i))
       - Q_S(i) )
 207          + V_q_over(i)
 208          - V_q_under(i)
 209              =e=
 210          - V_real(i) *
 211          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIq(i,j,c))
 212            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIq(i,j,c)))
 213          + V_imag(i) *
 214          ( sum((j,c)$(branchstatus(i,j,c) ), V_LineIr(i,j,c))
 215            + sum((j,c)$(branchstatus(j,i,c) and not(branchstatus(i,j,c))  )
      , V_LineIr(i,j,c)))
 216          - (Bs(i) + V_switchedshuntB(i)$sum(bus_s$numbswitched(i, bus_s), 1
      )) * (sqr(V_real(i)) + sqr(V_imag(i)));
 217  ;
 218   
 219  * Loss on line c connecting bus i and bus j
 220  c_Lossijc(i,j,c)$(branchstatus(i,j,c))..
****          $140
 221            V_Lossijc(i,j,c) =e=
****                    $140
 222                 g(i,j,c)/( sqr(b(i,j,c))+ sqr(g(i,j,c)) ) * (  sqr(V_LineIr
      (i,j,c))+ sqr(V_LineIq(i,j,c)) )
 223  ;
 224   
 225  *Loss on lines connected with bus i
 226  c_Lossi(i)..
****        $140
 227         V_Lossi(i) =e=
****               $140
 228                sum((j,c)$(branchstatus(i,j,c)),V_Lossijc(i,j,c))
 229  ;
 230   
 231  * generator bus voltage set points enforced with violation variables
 232  v_generator_addup(i)$(sum(gen,status2(gen,i)) eq 1 and saturaup(i) eq 0)..
****                  $140                $140                      $140
 233           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= voltageran_high*Vsch(i)
****                                                                   $140 $140
 234  ;
 235  v_generator_addlow(i)$(sum(gen,status2(gen,i)) eq 1 and saturalow(i) eq 0)
****                   $140                                           $140
      ..
 236           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= voltageran_low*Vsch(i)
****                                                                  $140
 237  ;
 238   
 239   
 240  v_generator_addup_arti(i)$(sum(gen,status2(gen,i)) eq 1 )..
****                       $140
 241           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= voltageran_high*Vsch(i)
       + V_artup(i)
****           $140
 242  ;
 243  v_generator_addlow_arti(i)$(sum(gen,status2(gen,i)) eq 1 )..
****                        $140
 244           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= voltageran_low*Vsch(i) 
      - V_artlow(i)
****           $140
 245  ;
 246   
 247  v_generator_hardupl(i)..
****                    $140
 248           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =l= 1.15
 249  ;
 250   
 251  v_generator_harddownl(i)..
****                      $140
 252           sqrt(sqr(V_real(i)) + sqr(V_imag(i))) =g= 0.88
 253  ;
 254   
 255  * enforces generator participation factor in adjustment from schedule
 256  p_generator_add(gen)$(status(gen) eq 1 and abs(gen_participation_factor(ge
****                $140                                                    $140
      n)))..
 257           V_P(gen) =e= PgSch(gen) + gen_participation_factor(gen) * V_P_sys
****                            $140                                            
      tem_deviation
                  $140
 258  ;
 259   
 260  p_generator_addup(gen)$(status(gen) eq 1 and gentype(gen) eq 1)..
****                  $140                               $140
 261           V_P(gen) =l= 1.001*PgSch(gen)
 262  ;
 263  p_generator_addlow(gen)$(status(gen) eq 1 and gentype(gen) eq 1 and PgSch(
****                   $140
      gen) > 0 )..
 264           V_P(gen) =g= 0.999*PgSch(gen)
 265   
 266  ;
 267  *solar bus active power constraints uppr bound
 268  ;
 269  * WARNING TODO JH this equation has an error
 270  * causes infeasibility
 271  * e.g. 0 =g= 1e-6
 272  *
 273  * fixed it
 274  * Xinda can you check that this is correct?
 275  * am I understanding the data and model correctly?
 276  *solar bus  power constraints lower bound
 277  ;
 278   
 279   
 280  * Objective functions and pwl costs are listed in a separate file
 281  *$batinclude "%filepath%objective_voltage_stability_addterm.gms" obj deman
      dbids
GAMS 24.8.5  r61358 Released May 10, 2017 WEX-WEI x86 64bit/MS Windows 10/06/17 13:10:14 Page 2
Cost objective calculations for OPF models
C o m p i l a t i o n


 283  *this file is modified by Xinda Ke from Wisconsin university IV_acopf.gms
 284  *updated by Xinda ke in 7/26/2016
 285   
      * Set costmodel variable
      costmodel(gen)= 2;
       
      *-- Convexity Check
      * Not part of system of equations
      * LP/QCP/NLP can't handle nonconvex piecewise linear cost functions
      set thisgen(gen);
       
      parameters cur_slope, next_slope;
      loop(gen$(status(gen) and (costmodel(gen) eq 1) and (numcostpts(gen) > 2))
      ,
          next_slope = (costpts_y(gen,'2') - costpts_y(gen,'1'))
                       / (costpts_x(gen,'2') - costpts_x(gen,'1'));
          loop(costptset$(ord(costptset) < numcostpts(gen) - 1),
              cur_slope = next_slope;
              if((ord(costptset) < numcostpts(gen) - 2) and (costpts_x(gen,costp
      tset+2) eq costpts_x(gen,costptset+1)),
                  abort "Zero-length piecewise segment detected";
              );
              next_slope = (costpts_y(gen,costptset+2) - costpts_y(gen,costptset
      +1))
                           / (costpts_x(gen,costptset+2) - costpts_x(gen,costpts
      et+1))
       
              if(cur_slope - next_slope > 1e-8,
                  thisgen(gen1)=no; thisgen(gen)=yes;
                  display thisgen;
                  abort "Nonconvex piecewise linear costs not supported";
              );
          );
      );
 315   
 316  *===== SECTION: EQUATIONS PART 2
 317  * Defining piecewise linear generator cost curves
 318  * P is in per-unit, costpts_x is in MW, and costpts_y is in $/hr
 319   
 320   
 322   
 323  c_obj..
****      $140
**** LINE    332 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 324      V_objcost =e=
****              $140
**** LINE    333 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 325             V_shuntSwitchingTotalPenalty
 326  *penalty for contro_solar_pout
 327           + sum(i,P_S(i)*sqr(dis_gen_par1(i))+P_S(i)*dis_gen_par2(i)+dis_ge
****                                         $140                    $140       
      n_par3(i))
           $140
**** LINE    336 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 328           + solar_curtail_penalty * sum(i,Solar_p_curtail(i))
****                                 $140
**** LINE    337 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 329           + demand_response_increase_penalty * sum(i,De_response_Inc_P(i))
****                                            $140
**** LINE    338 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 330           - demand_response_decrease_penalty * sum(i,De_response_Dec_P(i))
****                                            $140
**** LINE    339 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 331  *the demand response q is comment out because it change with respose to p
 332  *+5*sum(i,De_response_Inc_Q(i))-5*sum(i,De_response_Dec_Q(i))
 333  *the term of line losses. tobe checked, tobe verified
 334           + sum(i,V_Lossi(i))
 335           + V_previous_solution_penalty
 336  *the penalty for power balancing relaxation
 337  *         + %balance_constr_penalty% * (
 338  *               sum(i,V_p_over(i))
 339  *             + sum(i,V_p_under(i))
 340  *             + sum(i,V_q_over(i))
 341  *             + sum(i,V_q_under(i)))
 342  ;
 343   
 344  c_objtest..
****          $140
**** LINE    353 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 345      V_objcosttest =e=
****                  $140
**** LINE    354 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 346             V_shuntSwitchingTotalPenalty
 347           + sum(i,P_S(i)*sqr(dis_gen_par1(i))+P_S(i)*dis_gen_par2(i)+dis_ge
      n_par3(i))
 348  *penalty for contro_solar_pout
 349           + solar_curtail_penalty * sum(i,Solar_p_curtail(i))
 350           + demand_response_increase_penalty * sum(i,De_response_Inc_P(i))
 351           - demand_response_decrease_penalty * sum(i,De_response_Dec_P(i))
 352  *the demand response q is comment out because it change with respose to p
 353  *+5*sum(i,De_response_Inc_Q(i))-5*sum(i,De_response_Dec_Q(i))
 354  *the term of line losses. tobe checked, tobe verified
 355           + sum(i,V_Lossi(i))
 356  * artificial variables is included in objective function with high penalty
       cost
 357           + generator_voltage_deviation_penalty
****                                               $140
**** LINE    366 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 358               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artup(bus))
****                       $120,340
**** LINE    367 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 359           + generator_voltage_deviation_penalty
 360               * sum(bus$(sum(gen,status2(gen,bus)) eq 1),  V_artlow(bus))
 361           + V_previous_solution_penalty
 362  *the penalty for power balancing relaxation
 363  *         + %balance_constr_penalty% * (
 364  *               sum(i,V_p_over(i))
 365  *             + sum(i,V_p_under(i))
 366  *             + sum(i,V_q_over(i))
 367  *             + sum(i,V_q_under(i)))
 368  ;
 369   
 370  c_gen_q_arctan_v(gen)$status(gen)..
****                 $140
**** LINE    379 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 371      v_q(gen) =e=
 372      qmin(gen) +
****         $140
**** LINE    381 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 373      (qmax(gen) - qmin(gen))
****          $140
**** LINE    382 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
 374      * (0.5 -
 375         (1 / pi) *
 376         arctan(
 377             sum(bus$atbus(gen,bus),
 378                 sqrt(sqr(v_real(bus)) + sqr(v_imag(bus))) - vsch(bus)) /
 379             pv_pq_smoothing_param));
****                                 $140
**** LINE    388 INPUT       C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_
                             control\Distribution_ACOPF\eqn_definition.gms
GAMS 24.8.5  r61358 Released May 10, 2017 WEX-WEI x86 64bit/MS Windows 10/06/17 13:10:14 Page 3
Cost objective calculations for OPF models
Error Messages


120  Unknown identifier entered as set
140  Unknown symbol
340  A label/element with the same name exist. You may have forgotten
        to quote a label/element reference. For example,
        set i / a,b,c /; parameter x(i); x('a') = 10;

**** 142 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.297 SECONDS      3 MB  24.8.5 r61358 WEX-WEI


USER: Small MUD - 5 User License                     G170430:2356CN-WIN
      Pacific Northwest National Laboratory                     DC12422


**** FILE SUMMARY

Input      C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_control\Distributi
           on_ACOPF\eqn_definition.gms
Output     C:\Users\kexi955\SyncDrive\PNNL_Project\Trasactive_control\Distributi
           on_ACOPF\eqn_definition.lst

**** USER ERROR(S) ENCOUNTERED
